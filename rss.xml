<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Words and Thoughts</title>
        <link>https://ysegorov.github.io</link>
        <description></description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://ysegorov.github.io/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Fri, 01 May 2020 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Zola</title>
                <pubDate>Fri, 01 May 2020 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2020/zola/</link>
                <guid>https://ysegorov.github.io/2020/zola/</guid>
                <description>&lt;h1 id=&quot;zola&quot;&gt;Zola&lt;&#x2F;h1&gt;
&lt;p&gt;I&#x27;ve decided to switch from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; (which is archived now) to &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;zola&lt;&#x2F;a&gt; to
manage this blog.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;wt&lt;&#x2F;code&gt; worked quite well for me but it requires time to manage it and to
develop it further (and I was not happy with &lt;code&gt;yaml&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;There are a lot of alternatives in this area and by occasion I&#x27;ve met
&lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;zola&lt;&#x2F;a&gt;. Luckily, it has most of the features I was using with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt;
(actually, it was the reason to switch to &lt;code&gt;zola&lt;&#x2F;code&gt; and to archive &lt;code&gt;wt&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;It took some time to understand the way &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;zola&lt;&#x2F;a&gt; works - mostly to convert
templates from &lt;a href=&quot;https:&#x2F;&#x2F;jinja.palletsprojects.com&#x2F;&quot;&gt;jinja&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.app&#x2F;&quot;&gt;tera&lt;&#x2F;a&gt; and to update front-matter
from &lt;a href=&quot;https:&#x2F;&#x2F;yaml.org&quot;&gt;yaml&lt;&#x2F;a&gt; to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;toml-lang&#x2F;toml&quot;&gt;toml&lt;&#x2F;a&gt; format within markdown files.&lt;&#x2F;p&gt;
&lt;p&gt;I was hit by just one issue while converting this blog from &lt;code&gt;wt&lt;&#x2F;code&gt; to &lt;code&gt;zola&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It was not clear to me that there is no need to apply &lt;code&gt;markdown&lt;&#x2F;code&gt; filter to
content in templates as it was applied implicitly. Applying it for a second
time breaks syntax highlighting formatting which led me to a thought that I
can&#x27;t use &lt;code&gt;zola&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Happily, I&#x27;ve looked through the &lt;code&gt;zola&#x27;s&lt;&#x2F;code&gt; issues and found &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;getzola&#x2F;zola&#x2F;issues&#x2F;989&quot;&gt;this
one&lt;&#x2F;a&gt;. There is no need to apply &lt;code&gt;markdown&lt;&#x2F;code&gt; filter to
content in templates. Yay. Perfect.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s see how it will work for me.&lt;&#x2F;p&gt;
&lt;p&gt;Stay tuned and take care of you and your family.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Wireguard and Linux network namespaces - perfect fit</title>
                <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2020/wireguard/</link>
                <guid>https://ysegorov.github.io/2020/wireguard/</guid>
                <description>&lt;h1 id=&quot;wireguard-and-linux-network-namespaces-perfect-fit&quot;&gt;Wireguard and Linux network namespaces - perfect fit&lt;&#x2F;h1&gt;
&lt;p&gt;I&#x27;m using two browsers usually - Firefox (switched to IceCat recently) and
Chromium.&lt;&#x2F;p&gt;
&lt;p&gt;Firefox&#x2F;IceCat is my workhorse, which is configured to route all
traffic through SOCKS5 proxy (&lt;a href=&quot;https:&#x2F;&#x2F;www.linode.com&quot;&gt;Linode&lt;&#x2F;a&gt; instance actually).&lt;&#x2F;p&gt;
&lt;p&gt;I would definitely stay solely with it but some sites don&#x27;t like requests
coming from VPS servers so I have to use Chromium for such cases (and it always
run in private mode to keep it clean).&lt;&#x2F;p&gt;
&lt;p&gt;SOCKS5 proxy works pretty good for me but I was curious if it&#x27;s possible to
use &lt;a href=&quot;https:&#x2F;&#x2F;www.wireguard.com&quot;&gt;wireguard&lt;&#x2F;a&gt; for my usecase - to route Firefox&#x2F;IceCat traffic
through VPN keeping all other traffic as is.&lt;&#x2F;p&gt;
&lt;p&gt;For domain name resolution I&#x27;m using locally installed &lt;a href=&quot;https:&#x2F;&#x2F;nlnetlabs.nl&#x2F;projects&#x2F;unbound&#x2F;about&#x2F;&quot;&gt;Unbound&lt;&#x2F;a&gt;
server which is bound to localhost. My &lt;code&gt;&#x2F;etc&#x2F;resolv.conf&lt;&#x2F;code&gt; file looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;nameserver 127.0.0.1
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It is configured to forward requests to &lt;a href=&quot;https:&#x2F;&#x2F;www.quad9.net&quot;&gt;Quad9&lt;&#x2F;a&gt; resolver (no Google, no
Cloudflare, right) but I&#x27;m planning to turn forwarding off and just use
&lt;a href=&quot;https:&#x2F;&#x2F;nlnetlabs.nl&#x2F;projects&#x2F;unbound&#x2F;about&#x2F;&quot;&gt;Unbound&lt;&#x2F;a&gt; on its own.&lt;&#x2F;p&gt;
&lt;p&gt;There are numerous posts in the Internet covering &lt;a href=&quot;https:&#x2F;&#x2F;www.wireguard.com&quot;&gt;wireguard&lt;&#x2F;a&gt;
configuration so I&#x27;ll just show my server&#x2F;client configuration with some notes.&lt;&#x2F;p&gt;
&lt;p&gt;For some reason I&#x27;ve missed the fact that &lt;code&gt;wg-quick&lt;&#x2F;code&gt; helper uses advanced
version of &lt;code&gt;wg&lt;&#x2F;code&gt; configuration file syntax which means &lt;code&gt;wg-quick&lt;&#x2F;code&gt; configuration
file can&#x27;t be used with &lt;code&gt;wg&lt;&#x2F;code&gt;. I&#x27;ve lost some time while battling this issue.&lt;&#x2F;p&gt;
&lt;p&gt;Summary of the settings:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;10.10.10.0&#x2F;24&lt;&#x2F;code&gt; - VPN network&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;10.10.10.1&#x2F;32&lt;&#x2F;code&gt; - VPN server address&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;10.10.10.10&#x2F;32&lt;&#x2F;code&gt; - VPN client address&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;55000&lt;&#x2F;code&gt; - VPN server port wireguard will be listening on&lt;&#x2F;li&gt;
&lt;li&gt;VPN server will route all traffic coming from client to the outside world&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;server&quot;&gt;Server&lt;&#x2F;h2&gt;
&lt;p&gt;My server configuration file looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# &#x2F;etc&#x2F;wireguard&#x2F;wg0.conf on the server
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;
[Interface]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PrivateKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;private key of the server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ListenPort &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;55000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;
[Peer]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PublicKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;public key of the client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PresharedKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;preshared key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;AllowedIPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;10.10.10.10&#x2F;32
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I use &lt;a href=&quot;https:&#x2F;&#x2F;www.alpinelinux.org&quot;&gt;Alpine Linux&lt;&#x2F;a&gt; on the server for my experiments with wireguard
and my &lt;code&gt;wg0&lt;&#x2F;code&gt; interface is defined like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;# excerpt from &#x2F;etc&#x2F;network&#x2F;interfaces

auto wg0
iface wg0 inet static
  address 10.10.10.1
  netmask 255.255.255.0
  pre-up ip link add dev wg0 type wireguard
  pre-up wg setconf wg0 &#x2F;etc&#x2F;wireguard&#x2F;wg0.conf
  pre-down ip link delete dev wg0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;One more player here is firewall (&lt;code&gt;iptables&lt;&#x2F;code&gt; in my case). It must be configured
to allow traffic coming from &lt;code&gt;wg0&lt;&#x2F;code&gt; interface to be forwarded to outside world.&lt;&#x2F;p&gt;
&lt;p&gt;Something like this should help you to get started:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ sudo iptables -A FORWARD -i wg0 -o eth0 -j ACCEPT
$ sudo iptables -A FORWARD -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
$ sudo iptables -t nat -A POSTROUTING -o eth0 -s 10.10.10.0&#x2F;24 -j MASQUERADE
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Don&#x27;t forget to make these rules permanent and allow forwarding on the server
using &lt;code&gt;sysctl&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;net.ipv4.ip_forward=1
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That&#x27;s it for the server.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;client&quot;&gt;Client&lt;&#x2F;h2&gt;
&lt;p&gt;Client configuration file looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# &#x2F;etc&#x2F;wireguard&#x2F;wg0.conf on the client
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;
[Interface]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PrivateKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;private key of the client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;
[Peer]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PublicKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;public key of the server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PresharedKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;preshared key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Endpoint &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;server public ip&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;55000
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;AllowedIPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;0.0.0.0&#x2F;0
PersistentKeepalive &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;25
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I&#x27;ve faced another issue while configuring the client - something absolutely
unexpected when pinging any host, even VPN server endpoint:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ ping 10.10.10.1
PING 10.10.10.1 (10.10.10.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;56(84&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;bytes of data.
From 10.10.10.10 icmp_seq=1 Destination Host Unreachable
ping: sendmsg: Required key not available
From 10.10.10.10 icmp_seq=2 Destination Host Unreachable
ping: sendmsg: Required key not available
From 10.10.10.10 icmp_seq=3 Destination Host Unreachable
ping: sendmsg: Required key not available
^C
--- 10.10.10.1 ping statistics ---
3 packets transmitted, 0 received, +3 errors, 100% packet loss, time 2028ms
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The same for pinging Google DNS:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;56(84&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;bytes of data.
From 10.10.10.10 icmp_seq=1 Destination Host Unreachable
ping: sendmsg: Required key not available
From 10.10.10.10 icmp_seq=2 Destination Host Unreachable
ping: sendmsg: Required key not available
From 10.10.10.10 icmp_seq=3 Destination Host Unreachable
ping: sendmsg: Required key not available
^C
--- 8.8.8.8 ping statistics ---
3 packets transmitted, 0 received, +3 errors, 100% packet loss, time 2037ms
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The reason for this was &lt;code&gt;AllowedIPs&lt;&#x2F;code&gt; misconfiguration:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# This is wrong setting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;AllowedIPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;0.0.0.0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I&#x27;ve somehow lost CIDR part from the address which means address will look like
&lt;code&gt;0.0.0.0&#x2F;32&lt;&#x2F;code&gt; which is absolutely wrong.&lt;&#x2F;p&gt;
&lt;p&gt;Pay attention to &lt;code&gt;wg&lt;&#x2F;code&gt; output, to &lt;code&gt;allowed ips&lt;&#x2F;code&gt; value especially:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ sudo wg
interface: wg0
  public key: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;client public key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;
  private key: (hidden&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;listening port: 52312

peer: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;server public key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;
  preshared key: (hidden&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;endpoint: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;server ip address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:55000
  allowed ips: 0.0.0.0&#x2F;32
  latest handshake: 1 minute, 12 seconds ago
  transfer: 644 B received, 2.23 KiB sent
  persistent keepalive: every 25 seconds
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, correct value for &lt;code&gt;AllowedIPs&lt;&#x2F;code&gt; should look like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# This is correct setting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;AllowedIPs &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;0.0.0.0&#x2F;0
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And now we&#x27;ve come to the most interesting part of the show - to client-side
network configuration.&lt;&#x2F;p&gt;
&lt;p&gt;The solution for my usecase was &lt;a href=&quot;https:&#x2F;&#x2F;www.wireguard.com&#x2F;netns&#x2F;#sample-script&quot;&gt;here&lt;&#x2F;a&gt; - simple
script by (probably) &lt;a href=&quot;https:&#x2F;&#x2F;www.wireguard.com&quot;&gt;wireguard&lt;&#x2F;a&gt; author. Thank you, Jason!&lt;&#x2F;p&gt;
&lt;p&gt;After some experiments I&#x27;ve taken an opposite approach from the original -
prepared &lt;code&gt;wg0&lt;&#x2F;code&gt; interface is moved to &lt;code&gt;vpn&lt;&#x2F;code&gt; namespace and is configured to be
the default route within this namespace.&lt;&#x2F;p&gt;
&lt;p&gt;We can check what interfaces our new &lt;code&gt;vpn&lt;&#x2F;code&gt; namespace has and how routing table
looks like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ vpn up
...
$ vpn exec ip link
1: lo: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;LOOPBACK,UP,LOWER_UP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link&#x2F;loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
10: wg0: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;POINTOPOINT,NOARP,UP,LOWER_UP&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; mtu 1420 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link&#x2F;none
...
$ vpn exec ip route
default dev wg0 scope link
10.10.10.0&#x2F;24 dev wg0 proto kernel scope link src 10.10.10.10
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Pretty good, right?&lt;&#x2F;p&gt;
&lt;p&gt;One more minor issue was the lack of domain name resolution for programs
running within &lt;code&gt;vpn&lt;&#x2F;code&gt; namespace. I was not expecting this so it took some time
to understand the reason.&lt;&#x2F;p&gt;
&lt;p&gt;Citing &lt;a href=&quot;http:&#x2F;&#x2F;manpages.ubuntu.com&#x2F;manpages&#x2F;trusty&#x2F;man8&#x2F;ip-netns.8.html&quot;&gt;ip-netns&lt;&#x2F;a&gt; manual:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A network namespace is logically another copy of the network stack, with
its own routes, firewall rules, and network devices.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;This means nobody is listening on &lt;code&gt;127.0.0.1:53&lt;&#x2F;code&gt; within &lt;code&gt;vpn&lt;&#x2F;code&gt; namespace. We can
easily solve this issue by starting another copy of &lt;a href=&quot;https:&#x2F;&#x2F;nlnetlabs.nl&#x2F;projects&#x2F;unbound&#x2F;about&#x2F;&quot;&gt;unbound&lt;&#x2F;a&gt; within
&lt;code&gt;vpn&lt;&#x2F;code&gt; namespace (I&#x27;ve decided to use separate copy of &lt;code&gt;unbound.conf&lt;&#x2F;code&gt; for this
named &lt;code&gt;unbound.vpn.conf&lt;&#x2F;code&gt;, YMMV).&lt;&#x2F;p&gt;
&lt;p&gt;Here is the script I&#x27;m using to manage VPN:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env bash

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;set &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-ex

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$UID &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;!=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; 0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; sudo -E &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;readlink -f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;)&amp;quot; &amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;NS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;vpn&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;WGIF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;wg0&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;WGCONF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&#x2F;etc&#x2F;wireguard&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;WGIF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.conf&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;WGADDRIPV4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;10.10.10.10&#x2F;24&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;UNBOUNDCONF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&#x2F;etc&#x2F;unbound&#x2F;unbound.$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;NS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.conf&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;UNBOUNDPID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&#x2F;run&#x2F;unbound.$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;NS&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.pid&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ip netns add $NS
    ip link add $WGIF type wireguard
    wg setconf $WGIF $WGCONF
    ip link set $WGIF netns $NS
    ip -n $NS addr add $WGADDRIPV4 dev $WGIF
    ip -n $NS link set lo up
    ip -n $NS link set $WGIF up
    ip -n $NS route add default dev $WGIF
    ip netns exec $NS unbound -c $UNBOUNDCONF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;UPID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;`cat $UNBOUNDPID`
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;kill &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$UPID &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;true
    ip -n $NS link set $WGIF down
    ip -n $NS link del $WGIF
    ip netns del $NS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; ip netns exec $NS wg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;execi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; ip netns exec $NS sudo -E -u &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;\#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;${SUDO_UID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;:-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$(id -u)} -g &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;\#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;${SUDO_GID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;:-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$(id -g)}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt; -- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;}

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;shift

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;case &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
    up&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;up &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;;
    down&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;down &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;;
    exec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;execi &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;;
    status&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;status &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Usage: $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt; up|down|exec&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; 1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;esac
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now I can start Firefox&#x2F;IceCat within &lt;code&gt;vpn&lt;&#x2F;code&gt; namespace and be sure all traffic
is routed through VPN:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ vpn exec icecat
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I&#x27;m using &lt;code&gt;netctl&lt;&#x2F;code&gt; to manage my network interfaces and the plan is to use
&lt;a href=&quot;https:&#x2F;&#x2F;wiki.archlinux.org&#x2F;index.php&#x2F;Netctl#Using_hooks&quot;&gt;netctl hooks&lt;&#x2F;a&gt; to bring VPN interface up or down as needed.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.wireguard.com&quot;&gt;wireguard&lt;&#x2F;a&gt; looks quite good (one more time - thank you, Jason A.
Donenfeld!) and I&#x27;m planning to use it for some time to decide if I can switch
from SOCKS5 proxy to VPN.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>AU6601 PCI-E Flash card reader and Linux kernel 4.16</title>
                <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2018/au6601-2/</link>
                <guid>https://ysegorov.github.io/2018/au6601-2/</guid>
                <description>&lt;h1 id=&quot;alcor-micro-au6601-pci-e-flash-card-reader-controller-and-linux-kernel-4-16&quot;&gt;Alcor Micro AU6601 PCI-E Flash card reader controller and Linux kernel 4.16&lt;&#x2F;h1&gt;
&lt;p&gt;I&#x27;ve got email from &lt;em&gt;Justin Faber&lt;&#x2F;em&gt; today saying the procedure, described
&lt;a href=&quot;&#x2F;2016&#x2F;au6601&#x2F;&quot;&gt;here&lt;&#x2F;a&gt;, doesn&#x27;t work for Linux kernel 4.16.6-1 in ArchLinux - build
fails with the following log:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;make -C &#x2F;lib&#x2F;modules&#x2F;4.16.6-1-ARCH&#x2F;build&#x2F; SUBDIRS=&#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build modules
make[1]: warning: jobserver unavailable: using -j1.  Add &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;+&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; to parent make rule.
make[1]: Entering directory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&#x2F;usr&#x2F;lib&#x2F;modules&#x2F;4.16.6-1-ARCH&#x2F;build&amp;#39;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;CC &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;  &#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&#x2F;au6601.o
&#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&#x2F;au6601.c: In function ‘au6601_pci_probe’:
&#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&#x2F;au6601.c:1187:2: error: implicit declaration of function ‘setup_timer’&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;did you mean ‘setup_irq’&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-Werror=implicit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;declaration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;setup_timer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;host-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;timer, au6601_timeout_timer, (unsigned long&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;;
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;^~~~~~~~~~~
  setup_irq
&#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&#x2F;au6601.c: In function ‘au6601_send_cmd’:
&#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&#x2F;au6601.c:619:5: warning: ‘ctrl’ may be used uninitialized in this function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-Wmaybe&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;uninitialized&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]
  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;u8 ctrl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;* some mysterious flags and control &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;
     ^~~~
cc1: some warnings being treated as errors
make[2]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*** &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;scripts&#x2F;Makefile.build:325: &#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&#x2F;au6601.o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; Error 1
make[1]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*** &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Makefile:1562: _module_&#x2F;var&#x2F;lib&#x2F;dkms&#x2F;au6601&#x2F;0.3&#x2F;build&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; Error 2
make[1]: Leaving directory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&#x2F;usr&#x2F;lib&#x2F;modules&#x2F;4.16.6-1-ARCH&#x2F;build&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;make: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*** &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Makefile:33: default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; Error 2 

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;duckduckgo.com&#x2F;&quot;&gt;DuckDuckGo&lt;&#x2F;a&gt; (my default search engine, by the way) &lt;a href=&quot;https:&#x2F;&#x2F;duckduckgo.com&#x2F;?q=linux+setup_timer+timer_setup+site%3Agithub.com&quot;&gt;helped&lt;&#x2F;a&gt;
to localize &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;torvalds&#x2F;linux&#x2F;commit&#x2F;e99e88a9d2b067465adaa9c111ada99a041bef9a&quot;&gt;the issue&lt;&#x2F;a&gt; - changes in Linux kernel timers API.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve followed instructions from the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;torvalds&#x2F;linux&#x2F;commit&#x2F;e99e88a9d2b067465adaa9c111ada99a041bef9a&quot;&gt;commit comments&lt;&#x2F;a&gt;
and prepared the &lt;em&gt;patch&lt;&#x2F;em&gt; and &lt;em&gt;PKGBUILD&lt;&#x2F;em&gt; to simplify installation:&lt;&#x2F;p&gt;
&lt;div &gt;
    &lt;script src=&quot;https:&amp;#x2F;&amp;#x2F;gist.github.com&amp;#x2F;ysegorov&amp;#x2F;951ae99426f5bd9092c3b4138e207af2.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;&lt;strong&gt;Please use this procedure and generated package at your own risk as I&#x27;m not
a Linux kernel driver developer&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Here is an updated version of steps to install the driver for &lt;strong&gt;amd64&lt;&#x2F;strong&gt;
architecture and Linux kernel 4.16+:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;create temporary directory somewhere and &lt;code&gt;cd&lt;&#x2F;code&gt; into it&lt;&#x2F;li&gt;
&lt;li&gt;download &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;951ae99426f5bd9092c3b4138e207af2&quot;&gt;patch and PKGBUILD&lt;&#x2F;a&gt; (ensure &lt;code&gt;PKGBUILD&lt;&#x2F;code&gt; and
&lt;code&gt;au6601-timers.diff&lt;&#x2F;code&gt; are located in the root of previously created
temporary directory)&lt;&#x2F;li&gt;
&lt;li&gt;build and install package using &lt;code&gt;makepkg&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;install kernel driver&lt;&#x2F;li&gt;
&lt;li&gt;use card reader :)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ mkdir au6601-dkms &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; au6601-dkms
$ wget -O au6601-pkgbuild.zip https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;951ae99426f5bd9092c3b4138e207af2&#x2F;archive&#x2F;master.zip
$ unzip -j au6601-pkgbuild.zip
$ makepkg -si
$ sudo modprobe au6601-pci
$ udevil mount &#x2F;dev&#x2F;mmcblk0p1

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# profit!

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;</description>
            </item>
        
            <item>
                <title>Dotenv</title>
                <pubDate>Thu, 13 Apr 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/dotenv/</link>
                <guid>https://ysegorov.github.io/2017/dotenv/</guid>
                <description>&lt;h1 id=&quot;dotenv&quot;&gt;Dotenv&lt;&#x2F;h1&gt;
&lt;p&gt;I&#x27;ve got used to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theskumar&#x2F;python-dotenv&quot;&gt;python-dotenv&lt;&#x2F;a&gt; library to customize some
project&#x27;s settings on per-deployment basis. But there is one thing which I
can&#x27;t say I like.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;&#x2F;h2&gt;
&lt;p&gt;The problem is the way this library makes values from &lt;code&gt;.env&lt;&#x2F;code&gt; available to
project - by using &lt;code&gt;os.environ.setdefault&lt;&#x2F;code&gt; which actually pollutes project&#x27;s
environment.&lt;&#x2F;p&gt;
&lt;p&gt;By occasion this can lead to some sensitive information like api keys to leak.
Let&#x27;s fix it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;&#x2F;h2&gt;
&lt;p&gt;My first attempt was to check the library&#x27;s API and find a way to load values
without polluting &lt;code&gt;os.environ&lt;&#x2F;code&gt;. This is possible and here is the code:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;os

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;dotenv.main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;dotenv_values

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;BASE_DIR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.dirname(os.path.abspath(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__file__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;))
DOTFILE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.environ.get(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;DOTFILE&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.env&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{}
dotenv_path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.join(BASE_DIR, DOTFILE)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.isfile(dotenv_path)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
    dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;dotenv_values(dotenv_path)

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;env&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.environ.get(key, dotenv.get(key, default))

API_KEY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;env(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;API_KEY&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;test-key&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This solution works and looks pretty, well, reasonable. At the same time
&lt;code&gt;dotenv_values&lt;&#x2F;code&gt; function is not documented and there is a chance API can be
changed.&lt;&#x2F;p&gt;
&lt;p&gt;Besides &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;theskumar&#x2F;python-dotenv&quot;&gt;python-dotenv&lt;&#x2F;a&gt; has features I don&#x27;t need, like
command-line interface or automatic &lt;code&gt;.env&lt;&#x2F;code&gt; file location up the directory tree
(I always know where &lt;code&gt;.env&lt;&#x2F;code&gt; file should be).&lt;&#x2F;p&gt;
&lt;p&gt;So, I&#x27;ve rolled my own solution which has fewer lines of code and is very easy
to reason about:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;__future__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;absolute_import

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;os
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;codecs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;logging


logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logging.getLogger(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__name__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;load_dotenv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;filename&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):

    decoder &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;codecs.getdecoder(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;unicode_escape&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;decode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&amp;quot;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;\&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
            v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;decoder(v[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;codecs.open(filename, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;rb&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;encoding) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;f:
        lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;x.strip() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;f &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;x.strip()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
        lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;x.startswith(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;#&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;=&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x)
        lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;x.split(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;=&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;lines)
        lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;x.strip()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;y.strip()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x, y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;lines)
        lines &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;x.upper()&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;decode(y)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x, y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;lines)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;line &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;lines:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;yield &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;line


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;dotenv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;filename&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.env&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;utf-8&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;filename
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.isabs(filename)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            filename &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.abspath(os.path.join(os.curdir, filename))
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.exists(filename)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logger.warning(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;dotenv file &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; not found&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, fn)
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;filename &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.filename &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;filename
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.encoding &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;encoding
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;property
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;data&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.filename &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;is not &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(
                load_dotenv(self.filename, encoding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.encoding))
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._data

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;key&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.environ.get(key, data.get(key, default))
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It can be used like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;os

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;dotenv &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;dotenv

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;BASE_DIR &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.dirname(os.path.abspath(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__file__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;))
DOTFILE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.environ.get(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;DOTFILE&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.env&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;env &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;dotenv(filename&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.path.join(BASE_DIR, DOTFILE))

API_KEY &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;env.get(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;API_KEY&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;test-key&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It is very easy to extend &lt;code&gt;dotenv&lt;&#x2F;code&gt; class with methods like &lt;code&gt;get_bool&lt;&#x2F;code&gt;,
&lt;code&gt;get_int&lt;&#x2F;code&gt;, &lt;code&gt;get_list&lt;&#x2F;code&gt; or whatever you need and provide some logic to verify
settings values as needed.&lt;&#x2F;p&gt;
&lt;p&gt;Value coming from &lt;code&gt;os.environ&lt;&#x2F;code&gt; takes precedence over &lt;code&gt;.env&lt;&#x2F;code&gt; value when
specified (this is useful while running &lt;em&gt;jenkins&lt;&#x2F;em&gt; jobs).&lt;&#x2F;p&gt;
&lt;p&gt;By implementing self-made solution we can simplify
our project&#x27;s dependency tree and be sure everything works as we need.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s it for &lt;strong&gt;dotenv&lt;&#x2F;strong&gt;. Stay tuned.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Reloadable decorator</title>
                <pubDate>Wed, 12 Apr 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/reloadable/</link>
                <guid>https://ysegorov.github.io/2017/reloadable/</guid>
                <description>&lt;h1 id=&quot;reloadable-decorator&quot;&gt;Reloadable decorator&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; &lt;code&gt;wt&lt;&#x2F;code&gt; library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; has a feature I&#x27;d like to share here. It was one of the first features
of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; I think.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;&#x2F;h2&gt;
&lt;p&gt;Suppose I have an idea for some post, just like this one.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve opened terminal, started &lt;strong&gt;wt&lt;&#x2F;strong&gt; in &lt;em&gt;development&lt;&#x2F;em&gt; mode using
&lt;strong&gt;&lt;code&gt;wt develop&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; command and started &lt;strong&gt;vim&lt;&#x2F;strong&gt; for authoring.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m typing for some time...&lt;&#x2F;p&gt;
&lt;p&gt;Ok, now I&#x27;d like to check it in browser and I&#x27;m adding some metadata for
this post to configuration - &lt;strong&gt;&lt;code&gt;wt.yaml&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; file.&lt;&#x2F;p&gt;
&lt;p&gt;After this step I&#x27;m expecting refreshed page in the browser to contain updated
data from configuration.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;&#x2F;h2&gt;
&lt;p&gt;Internally &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; has a so called &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;blob&#x2F;master&#x2F;wt&#x2F;engine.py#L22&quot;&gt;engine&lt;&#x2F;a&gt; to handle
incoming requests. It depends on &lt;strong&gt;&lt;code&gt;wt.yaml&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; configuration and reads it on
initialization.&lt;&#x2F;p&gt;
&lt;p&gt;It is quite possible for the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;blob&#x2F;master&#x2F;wt&#x2F;engine.py#L22&quot;&gt;engine&lt;&#x2F;a&gt; to contain logic to reload
configuration when needed but I thought this task shouldn&#x27;t be implemented
there.&lt;&#x2F;p&gt;
&lt;p&gt;It would be better to have the possibility to easily turn this feature off when
needed (not while &lt;em&gt;authoring&lt;&#x2F;em&gt; but while &lt;em&gt;developing&lt;&#x2F;em&gt; the library) or even just
throw away.&lt;&#x2F;p&gt;
&lt;p&gt;So, here comes &lt;strong&gt;reloadable&lt;&#x2F;strong&gt; decorator:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;logging
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;os


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;reloadable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;message&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._message &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;message
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._values &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._lastmods &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{}
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logging.getLogger(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;wt.reloadable&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__call__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):

        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;inner&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;filename&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
            v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self._values.get(filename)
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self._lastmods.get(filename)
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                modified &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.stat(filename)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.st_mtime
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;FileNotFoundError&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.logger.warn(
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;File not found &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;, skipping stat&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, filename)
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;pass
            else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;or &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;modified &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;m:
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.logger.debug(
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;File &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; modified, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, filename, self._message)
                    self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._lastmods[filename] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;modified
                    v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None

            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._values[filename] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;fn(filename)
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;v
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;inner
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It keeps last modified times for files and caches results of function calls. In
case file was modified cached value will be automatically updated. Pretty
simple yet very useful.&lt;&#x2F;p&gt;
&lt;p&gt;Real life usage example looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;decorators &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;reloadable
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;engine &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;WT


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;reloadable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;(re)loading configuration...&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;engine&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;fn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;WT(fn)
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Currently &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; uses &lt;a href=&quot;http:&#x2F;&#x2F;aiohttp.readthedocs.io&#x2F;en&#x2F;stable&#x2F;&quot;&gt;aiohttp&lt;&#x2F;a&gt; as http backend.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s only configured handler calls &lt;strong&gt;&lt;code&gt;engine&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; function to get rendering
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;blob&#x2F;master&#x2F;wt&#x2F;engine.py#L22&quot;&gt;engine&lt;&#x2F;a&gt; instance (you can check &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;blob&#x2F;master&#x2F;wt&#x2F;server.py&quot;&gt;server module&lt;&#x2F;a&gt; sources
for details).&lt;&#x2F;p&gt;
&lt;p&gt;In case configuration file was updated this call will create new fresh instance
of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;blob&#x2F;master&#x2F;wt&#x2F;engine.py#L22&quot;&gt;engine&lt;&#x2F;a&gt; ready to render pages and posts.
This instance will be cached within &lt;strong&gt;reloadable&lt;&#x2F;strong&gt; decorator cache so any
subsequent calls to &lt;strong&gt;&lt;code&gt;engine&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; function will just have the very same
instance in return (till configuration was updated again).&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;p&gt;That&#x27;s it for &lt;strong&gt;reloadable&lt;&#x2F;strong&gt; decorator. Stay tuned.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>WT documentation</title>
                <pubDate>Tue, 11 Apr 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/wt-docs/</link>
                <guid>https://ysegorov.github.io/2017/wt-docs/</guid>
                <description>&lt;h1 id=&quot;wt-documentation&quot;&gt;WT documentation&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; &lt;code&gt;wt&lt;&#x2F;code&gt; library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This is just a few words about &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; documentation.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s &lt;del&gt;available online&lt;&#x2F;del&gt; and covers almost all &lt;strong&gt;&lt;code&gt;wt&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; features.&lt;&#x2F;p&gt;
&lt;p&gt;And it was built using &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt;. Documentation sources are available in
the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; repository under &lt;code&gt;docs&#x2F;&lt;&#x2F;code&gt; folder.&lt;&#x2F;p&gt;
&lt;p&gt;There was &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;issues&#x2F;28&quot;&gt;minor issue&lt;&#x2F;a&gt; with deployment though.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;The documentation is hosted using &lt;a href=&quot;https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;user-organization-and-project-pages&#x2F;#project-pages&quot;&gt;GitHub pages for projects&lt;&#x2F;a&gt; and it&#x27;s
served under &lt;em&gt;baseurl&lt;&#x2F;em&gt; (&lt;strong&gt;&lt;code&gt;&#x2F;wt-docs&#x2F;&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; in my case)&lt;&#x2F;del&gt;. I was not aware of this
requirement while developing &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; so internally it&#x27;s not supported. This
means there is a difference between local links in &lt;em&gt;development&lt;&#x2F;em&gt; mode and in
&lt;em&gt;build&lt;&#x2F;em&gt; mode which can lead to broken local links in &lt;em&gt;build&lt;&#x2F;em&gt; mode.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve solved the problem but I&#x27;m not sure I like the
solution. There must be a better way to handle &lt;em&gt;baseurl&lt;&#x2F;em&gt; (this issue was
solved in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt; later).&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Logger service using epoll - Part 2</title>
                <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/logger-2/</link>
                <guid>https://ysegorov.github.io/2017/logger-2/</guid>
                <description>&lt;h1 id=&quot;logger-service-using-epoll-part-2&quot;&gt;Logger service using epoll - Part 2&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; This is a follow-up for &lt;a href=&quot;&#x2F;2017&#x2F;logger&#x2F;&quot;&gt;part 1&lt;&#x2F;a&gt; post about logger service.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;So, the task is to have logger service capable of handling, let&#x27;s say, 1k
logging records per second. I am expecting about 100 client connections to this
service and It&#x27;s clear that it must be stable enough to handle incoming
requests.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Please do remember that all figures in this post I&#x27;ve got running the code on
my laptop - YMMV&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;To test the service I have this script:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env python
# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;os
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;time
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;random
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;logging
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;logging.config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;multiprocessing &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;mp


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;setup_logging&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;():
    conf &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;version&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;disable_existing_loggers&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;formatters&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;default&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;format&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: (
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%(levelname)1.1s %(asctime)s %(name)s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%(lineno)3s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;
                    &amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%(message)s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;),
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;datefmt&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%d %H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%S&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
            }
        },
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;handlers&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;service_logger&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;level&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;DEBUG&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# must be importable
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;class&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;svctools.handlers.SocketHandler&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;host&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;port&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;5000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
            },
        },
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;loggers&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: {
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;level&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;DEBUG&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;handlers&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;service_logger&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;],
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;propagate&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;False&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
            },
        },
    }
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logging.config.dictConfig(conf)


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;idx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%06d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;] log message &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%08d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;pid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;os.getpid()
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;logger &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logging.getLogger(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__name__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cnt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;random.randint(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;300&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;800&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;True&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logger.debug(msg, pid, cnt, extra&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;trace_id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: idx})
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cnt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;time.sleep(random.choice((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.02&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.03&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.03&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.02&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0.01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)))
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cnt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;break

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logger.debug(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%06d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;] --------&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, pid, extra&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;trace_id&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: idx})

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;count


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;():
    pool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;mp.Pool(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;200&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, setup_logging)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;pool.map_async(run, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;range&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;))

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;data &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;r.get()
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;print&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;sent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt; records&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;sum&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(data))


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__name__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;__main__&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;main()

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We have pool of 200 processes performing the same action - just calling
&lt;code&gt;logger.debug&lt;&#x2F;code&gt;.
Single action to be performed by a process is the following:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;randomly select number of logging messages to be send to service (somewhere
between 300 and 800 messages)&lt;&#x2F;li&gt;
&lt;li&gt;send messages one by one with a tiny delay in between (to simulate some kind
of real load)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;We will be running 1000 of such actions which means we will send about 500k
messages to our service (this is just an approximation).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;step-1-logging-to-a-file-only&quot;&gt;Step 1 - logging to a file (only)&lt;&#x2F;h3&gt;
&lt;p&gt;It was not interesting at all as I&#x27;ve got about &lt;strong&gt;8700 records per second&lt;&#x2F;strong&gt; -
very impressive. But we need all records to be stored in database - to do
a query later. Let&#x27;s see.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;step-2-logging-to-a-file-and-to-postgresql-using-logging-handler&quot;&gt;Step 2 - logging to a file and to PostgreSQL using logging handler&lt;&#x2F;h3&gt;
&lt;p&gt;The code for PostgreSQL logging handler is available &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;8947d99a016aa00ace51d9ab4d89c428#file-pghandler-py&quot;&gt;here&lt;&#x2F;a&gt;. This
time results were disappointing - about &lt;strong&gt;200 records per second&lt;&#x2F;strong&gt; (at the same
time there was no data loss which is good).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;step-3-logging-to-a-file-and-to-postgresql-using-self-made-handler&quot;&gt;Step 3 - logging to a file and to PostgreSQL using self-made handler&lt;&#x2F;h3&gt;
&lt;p&gt;It was clear that our service everytime runs the same query inserting just one
record to database. So, the trick is to employ buffering and to insert records
in bulk using, for example, &lt;a href=&quot;http:&#x2F;&#x2F;initd.org&#x2F;psycopg&#x2F;docs&#x2F;extras.html#psycopg2.extras.execute_values&quot;&gt;&lt;code&gt;psycopg2.extras.execute_values&lt;&#x2F;code&gt;&lt;&#x2F;a&gt;.
This time I&#x27;ve got about &lt;strong&gt;3600 records per second&lt;&#x2F;strong&gt; using 1k-blocks - much
better. For a batches of 100 records I&#x27;ve got about &lt;strong&gt;3000 records per second&lt;&#x2F;strong&gt;
which is a bit slower but still good enough.&lt;&#x2F;p&gt;
&lt;p&gt;This solution has one trick though. As we are prebuffering records there will
be times buffer is not full and there is no incoming records for some time.
This can lead to data loss which is bad. To solve this problem we can use
&lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;signal.html#signal.setitimer&quot;&gt;&lt;code&gt;signal.setitimer&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; to setup simple timer to send &lt;code&gt;SIGALRM&lt;&#x2F;code&gt; on a
regular basis and to flush receiving buffer on it.&lt;&#x2F;p&gt;
&lt;p&gt;Here are the features of the logger service:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;no threads or child processes&lt;&#x2F;li&gt;
&lt;li&gt;edge-triggered epoll for i&#x2F;o&lt;&#x2F;li&gt;
&lt;li&gt;PostgreSQL backend&lt;&#x2F;li&gt;
&lt;li&gt;the code looks ugly&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Last feature will be fixed soon. Stay tuned.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>The finger pointing at the moon is not the moon</title>
                <pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/moon/</link>
                <guid>https://ysegorov.github.io/2017/moon/</guid>
                <description>&lt;h1 id=&quot;the-finger-pointing-at-the-moon-is-not-the-moon&quot;&gt;The finger pointing at the moon is not the moon&lt;&#x2F;h1&gt;
&lt;p&gt;14 precepts by &lt;a href=&quot;http:&#x2F;&#x2F;www.seaox.com&#x2F;thich.html&quot;&gt;&lt;strong&gt;Thich Nhat Hanh&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Do not be idolatrous about or bound to any doctrine, theory, or ideology,
even Buddhist ones. All systems of thought are guiding means;
they are not absolute truth.&lt;&#x2F;p&gt;
&lt;p&gt;Do not think that the knowledge you presently possess is changeless,
absolute truth. Avoid being narrow-minded and bound to present views.
Learn and practice non-attachment from views in order to be open to receive
others&#x27; viewpoints. Truth is found in life and not merely in conceptual
knowledge. Be ready to learn throughout our entire life and to observe
reality in yourself and in the world at all times.&lt;&#x2F;p&gt;
&lt;p&gt;Do not force others, including children, by any means whatsoever, to adopt
your views, whether by authority, threat, money, propaganda, or even
education. However, through compassionate dialogue, help others renounce
fanaticism and narrowness.&lt;&#x2F;p&gt;
&lt;p&gt;Do not avoid contact with suffering or close your eyes before suffering.
Do not lose awareness of the existence of suffering in the life of the world.
Find ways to be with those who are suffering by all means, including
personal contact and visits, images, sound. By such means, awaken yourself
and others to the reality of suffering in the world.&lt;&#x2F;p&gt;
&lt;p&gt;Do not accumulate wealth while millions are hungry.
Do not take as the aim of you life fame, profit, wealth, or sensual pleasure.
Live simply and share time, energy, and material resources with those
who are in need.&lt;&#x2F;p&gt;
&lt;p&gt;Do not maintain anger or hatred. As soon as anger and hatred arise,
practice the meditation on compassion in order to deeply understand
the persons who have caused anger and hatred.
Learn to look at other beings with the eyes of compassion.&lt;&#x2F;p&gt;
&lt;p&gt;Do not lose yourself in dispersion and in your surroundings.
Learn to practice breathing in order to regain composure of body and mind,
to practice mindfulness, and to develop concentration and understanding.&lt;&#x2F;p&gt;
&lt;p&gt;Do not utter words that can create discord and cause the community to break.
Make every effort to reconcile and resolve all conflicts, however small.&lt;&#x2F;p&gt;
&lt;p&gt;Do not say untruthful things for the sake of personal interest or
to impress people. Do not utter words that cause diversion and hatred.
Do not spread news that you do not know to be certain.
Do not criticize or condemn things you are not sure of.
Always speak truthfully and constructively.
Have the courage to speak out about situations of injustice,
even when doing so may threaten your own safety.&lt;&#x2F;p&gt;
&lt;p&gt;Do not use the Buddhist community for personal gain or profit,
or transform your community into a political party.
A religious community should, however, take a clear stand
against oppression and injustice, and should strive to change
the situation without engaging in partisan conflicts.&lt;&#x2F;p&gt;
&lt;p&gt;Do not live with a vocation that is harmful to humans and nature.
Do not invest in companies that deprive others of their chance to life.
Select a vocation which helps realize your ideal compassion.&lt;&#x2F;p&gt;
&lt;p&gt;Do not kill. Do not let others kill.
Find whatever means possible to protect life and to prevent war.&lt;&#x2F;p&gt;
&lt;p&gt;Possess nothing that should belong to others.
Respect the property of others but prevent others
from enriching themselves from human suffering
or the suffering of other beings.&lt;&#x2F;p&gt;
&lt;p&gt;Do not mistreat your body.
Learn to handle it with respect.
Do not look on your body as only and instrument.
Preserve vital energies (sexual, breath, spirit) for the realization
of the Way.
Sexual expression should not happen without love and commitment.
In sexual relationships be aware of future suffering that may be caused.
To preserve the happiness of others, respect the rights and commitments
of others.
Be fully aware of the responsibility of bringing new lives into the world.
Meditate on the world into which you are bringing new beings.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;No words can replace practice, only practice can make the words&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Logger service using epoll - Part 1</title>
                <pubDate>Fri, 24 Mar 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/logger/</link>
                <guid>https://ysegorov.github.io/2017/logger/</guid>
                <description>&lt;h1 id=&quot;logger-service-using-epoll-part-1&quot;&gt;Logger service using epoll - Part 1&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; There is a &lt;a href=&quot;&#x2F;2017&#x2F;logger-2&#x2F;&quot;&gt;continuation&lt;&#x2F;a&gt; of this post.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Suppose we have a number of microservices and we need some way to easily handle
logging from all of them.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.graylog.org&#x2F;&quot;&gt;Graylog&lt;&#x2F;a&gt; might be a good choice but in case you don&#x27;t
need such a full-featured solution self-made logging service can serve you well.&lt;&#x2F;p&gt;
&lt;p&gt;Python&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;logging.html&quot;&gt;logging&lt;&#x2F;a&gt; facility has almost everything we need for this providing
&lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;logging.handlers.html#sockethandler&quot;&gt;SocketHandler&lt;&#x2F;a&gt; to send log records to a network socket. The missed part is
actual logging service which will be able to receive and save those records.
&lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;howto&#x2F;logging-cookbook.html&quot;&gt;Logging Cookbook&lt;&#x2F;a&gt; contains &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;howto&#x2F;logging-cookbook.html#sending-and-receiving-logging-events-across-a-network&quot;&gt;basic implementation&lt;&#x2F;a&gt; of such a service
which is good for a quick start.&lt;&#x2F;p&gt;
&lt;p&gt;I was experimenting with &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dabeaz&#x2F;curio&quot;&gt;curio&lt;&#x2F;a&gt; as an engine for such a service and it
worked pretty well and certainly might be a good choice for this task. The only
thing forced me to look for another solution was it&#x27;s Python 3 dependency. All
microservices I need logging service for are using Python 2 and I&#x27;d like
it to use the very same python.&lt;&#x2F;p&gt;
&lt;p&gt;So, after a bit more experiments I came up with &lt;strong&gt;edge-triggered epoll-based&lt;&#x2F;strong&gt;
solution which is compatible with Python 2 and Python 3.
The code for the service is available &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;8947d99a016aa00ace51d9ab4d89c428&quot;&gt;here&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;It took some time to understand &lt;a href=&quot;http:&#x2F;&#x2F;man7.org&#x2F;linux&#x2F;man-pages&#x2F;man7&#x2F;epoll.7.html&quot;&gt;epoll&lt;&#x2F;a&gt; mechanics and &lt;a href=&quot;http:&#x2F;&#x2F;scotdoyle.com&#x2F;python-epoll-howto.html&quot;&gt;this article&lt;&#x2F;a&gt;
by Scot Doyle helped a lot. My local test confirms service is pretty stable and
properly handle incoming logging records.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;8947d99a016aa00ace51d9ab4d89c428&quot;&gt;Code in gist&lt;&#x2F;a&gt; is rather generic and I&#x27;m going to add some features, but
they won&#x27;t be published there, sorry for that:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;use some &lt;em&gt;magic&lt;&#x2F;em&gt; number in message header as a simple measure to prevent
unknown clients from spamming (even though the service will listen on
localhost)&lt;&#x2F;li&gt;
&lt;li&gt;enforce message size limits&lt;&#x2F;li&gt;
&lt;li&gt;store logging records in database&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Another part of this story is &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;logging.handlers.html#sockethandler&quot;&gt;SocketHandler&lt;&#x2F;a&gt; which has a feature I&#x27;d like
to remove - &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;logging.handlers.html#logging.handlers.SocketHandler.createSocket&quot;&gt;createSocket&lt;&#x2F;a&gt; method implemets exponential back-off algorithm
which I just don&#x27;t need. During my tests intentionally broken (just for tests)
connection to logging service leads to logging records being missed.&lt;&#x2F;p&gt;
&lt;p&gt;To be clear with the problem. Suppose we have a server and a microservice.
Everything works as expected and is in good shape. Some time later we need to
update the code for logging service and restart it. Using &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;logging.handlers.html#sockethandler&quot;&gt;SocketHandler&lt;&#x2F;a&gt;
from python&#x27;s standard library will force us to restart our microservice
because without this step we will be missing at least one or two logging
records from it (due to the way this handler works).&lt;&#x2F;p&gt;
&lt;p&gt;I wanted a way to automatically handle such a situation without user
intervention. So, below is a modified version of &lt;a href=&quot;https:&#x2F;&#x2F;docs.python.org&#x2F;2&#x2F;library&#x2F;logging.handlers.html#sockethandler&quot;&gt;SocketHandler&lt;&#x2F;a&gt;. Every time
it needs to handle a record it will try to connect to logging service to
guarantee message delivery. It uses &lt;a href=&quot;http:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;18189190&quot;&gt;small trick&lt;&#x2F;a&gt; to detect socket state and
to re-establish connection when needed.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;__future__ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;absolute_import

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;logging
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;socket
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;struct
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;traceback
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cPickle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;pickle
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;ImportError&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# pragma: no cover
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;pickle


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;SocketHandler&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;logging.Handler&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&amp;quot;&amp;quot;&amp;quot;
    [!] modified version of python&amp;#39;s logging.handlers.SocketHandler

    &amp;quot;&amp;quot;&amp;quot;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;host&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;port&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logging.Handler.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__init__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(self)
        self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.host &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;host
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.port &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;port
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.closeOnError &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.retry_count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;makeSocket&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;s.connect((self.host, self.port))
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;socket.error:
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# TODO sentry
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;traceback.print_exc()
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;s.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;s

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;_get_sock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.makeSocket()
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._sock

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;_set_sock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;is &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._sock:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self._sock.close()
        self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;._sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;value

    sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;property&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(_get_sock, _set_sock)

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;get_sock_state&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# see http:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;18189190
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;fmt &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;B&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;7 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;I&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;24
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;sz &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;struct.calcsize(fmt)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;struct.unpack(
            fmt, s.getsockopt(socket.IPPROTO_TCP, socket.TCP_INFO, sz))
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;x

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;send&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        retries &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.retry_count
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;retries &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock
            retries &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;sock:
                state &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.get_sock_state(sock)
                &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# check tcp_info.tcpi_state value is TCP_ESTABLISHED
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;state[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;continue
                try&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;hasattr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(sock, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;sendall&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sock.sendall(s)
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                        sentsofar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(s)
                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
                            sent &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sock.send(s[sentsofar:])
                            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;sentsofar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;sentsofar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;sent
                            left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;sent
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;break
                except &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;socket.error:
                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;makePickle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;record&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        ei &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;record.exc_info
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;ei:
            dummy &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.format(record)  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# noqa
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;record.exc_info &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# to avoid Unpickleable error
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;dict&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(record.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;__dict__&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;d[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;msg&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;record.getMessage()
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;d[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;args&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;pickle.dumps(d, pickle.HIGHEST_PROTOCOL)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;ei:
            record.exc_info &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;ei  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# for next handler
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;slen &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;struct.pack(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&amp;gt;L&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;len&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(s))
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;slen &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;s

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;handleError&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;record&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.closeOnError &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;and &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;logging.Handler.handleError(self, record)

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;emit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;record&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.makePickle(record)
            self.send(s)
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;except &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;KeyboardInterrupt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;SystemExit&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;raise
        except&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# TODO sentry
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;traceback.print_exc()
            self.handleError(record)

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.acquire()
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;try&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock:
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.sock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;None
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;finally&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;self.release()
        logging.Handler.close(self)
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;I&#x27;ll put logging service and this handler in production next month. Stay tuned.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Static blog generator</title>
                <pubDate>Wed, 22 Mar 2017 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2017/wt/</link>
                <guid>https://ysegorov.github.io/2017/wt/</guid>
                <description>&lt;h1 id=&quot;static-blog-generator&quot;&gt;Static Blog Generator&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; This library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This is a short introduction to &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&quot;&gt;wt&lt;&#x2F;a&gt; - library I&#x27;ve made for my personal
use.&lt;&#x2F;p&gt;
&lt;p&gt;It is pretty young and it lacks some features I&#x27;d like it to have but it
works pretty good for me.&lt;&#x2F;p&gt;
&lt;p&gt;So, this is &lt;a href=&quot;http:&#x2F;&#x2F;docs.getpelican.com&#x2F;&quot;&gt;yet&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;grow.io&#x2F;&quot;&gt;another&lt;&#x2F;a&gt; &lt;a href=&quot;http:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;static&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;hexo.io&#x2F;&quot;&gt;site&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;http:&#x2F;&#x2F;wintersmith.io&#x2F;&quot;&gt;blog&lt;&#x2F;a&gt;
&lt;a href=&quot;http:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;generator&lt;&#x2F;a&gt;. Yes. One more.&lt;&#x2F;p&gt;
&lt;p&gt;Some time ago I thought it would be great to build something for my own use. I
have several ideas and this is the first one named &lt;strong&gt;wt&lt;&#x2F;strong&gt;.
I know that &lt;strong&gt;wt&lt;&#x2F;strong&gt; is a name for executable from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;wiredtiger&#x2F;wiredtiger&quot;&gt;WiredTiger&lt;&#x2F;a&gt;
distribution but I think it&#x27;s ok. This library is not expected to be installed
system-wide, it should be used within virtual environment.
And luckily the name was free on &lt;a href=&quot;https:&#x2F;&#x2F;pypi.python.org&#x2F;pypi&#x2F;wt&quot;&gt;pypi&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The library requires &lt;strong&gt;python 3&lt;&#x2F;strong&gt; and have the following features (citing from
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;blob&#x2F;master&#x2F;README.md&quot;&gt;readme&lt;&#x2F;a&gt;):&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;daringfireball.net&#x2F;projects&#x2F;markdown&#x2F;&quot;&gt;markdown&lt;&#x2F;a&gt; for content&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;yaml.org&#x2F;&quot;&gt;yaml&lt;&#x2F;a&gt; for configuration&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;jinja.pocoo.org&#x2F;&quot;&gt;jinja2&lt;&#x2F;a&gt; for templating&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Atom_(standard)&quot;&gt;atom&lt;&#x2F;a&gt; for feed&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;aiohttp.readthedocs.io&#x2F;en&#x2F;stable&#x2F;&quot;&gt;aiohttp&lt;&#x2F;a&gt; for development server&lt;&#x2F;li&gt;
&lt;li&gt;only two types of content - &lt;strong&gt;page&lt;&#x2F;strong&gt; and &lt;strong&gt;post&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;content metadata lives in configuration file&lt;&#x2F;li&gt;
&lt;li&gt;have sensible defaults for content sources&lt;&#x2F;li&gt;
&lt;li&gt;no python coding needed to work with&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;At the moment I&#x27;ve used it in a couple of projects.&lt;&#x2F;p&gt;
&lt;p&gt;The first one is this blog (&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;blog&quot;&gt;blog source code&lt;&#x2F;a&gt;) and another one
is the &lt;a href=&quot;https:&#x2F;&#x2F;tolsha.ru&#x2F;&quot;&gt;tolsha.ru site&lt;&#x2F;a&gt; (in Russian) I&#x27;ve created for my elder
brother who makes &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Pottery&quot;&gt;pottery&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;tolsha.ru&#x2F;util&#x2F;&quot;&gt;they&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;tolsha.ru&#x2F;milk&#x2F;chasha_lebed&#x2F;&quot;&gt;are&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;tolsha.ru&#x2F;souvenirs&#x2F;&quot;&gt;amazing&lt;&#x2F;a&gt;
(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;tolsha.ru&quot;&gt;site source code&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;These two sites are pretty different in nature but &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&quot;&gt;wt&lt;&#x2F;a&gt; works very well for
both.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ll keep this library moving forward adding more features and refactoring
some internals for a better code.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;The next project I have plans for is &lt;strong&gt;rss reader&lt;&#x2F;strong&gt; and there is a big chance
I&#x27;ll build it using &lt;a href=&quot;http:&#x2F;&#x2F;elixir-lang.org&#x2F;&quot;&gt;Elixir&lt;&#x2F;a&gt;&#x2F;&lt;a href=&quot;http:&#x2F;&#x2F;www.phoenixframework.org&#x2F;&quot;&gt;Phoenix&lt;&#x2F;a&gt;&lt;&#x2F;del&gt; (not happened).&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Self-made Virtualenv Wrapper</title>
                <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2016/virtualenv/</link>
                <guid>https://ysegorov.github.io/2016/virtualenv/</guid>
                <description>&lt;h1 id=&quot;self-made-virtualenv-wrapper&quot;&gt;Self-made Virtualenv Wrapper&lt;&#x2F;h1&gt;
&lt;p&gt;Not long ago I&#x27;ve switched from &lt;a href=&quot;https:&#x2F;&#x2F;pypi.python.org&#x2F;pypi&#x2F;virtualenvwrapper&quot;&gt;virtualenvwrapper&lt;&#x2F;a&gt; to self-made solution
based on &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;datagrok&#x2F;2199506&quot;&gt;this idea&lt;&#x2F;a&gt; by &lt;a href=&quot;http:&#x2F;&#x2F;datagrok.org&#x2F;&quot;&gt;datagrok&lt;&#x2F;a&gt;.
It works pretty well for me and I&#x27;d like to share it here.&lt;&#x2F;p&gt;
&lt;p&gt;The idea is to have a &lt;em&gt;root&lt;&#x2F;em&gt; directory (&lt;code&gt;$HOME&#x2F;_dev&lt;&#x2F;code&gt; in my case)
for all projects and to have shell helper to easily jump into any project
and to automatically activate it&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;pypa&#x2F;virtualenv&quot;&gt;virtualenv&lt;&#x2F;a&gt; if it exists.&lt;&#x2F;p&gt;
&lt;p&gt;Here is how it looks in &lt;code&gt;bash&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;[local] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;egorov@asus 11:33:19&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:~  $ dev blog
Virtual environment found in &#x2F;home&#x2F;egorov&#x2F;_dev&#x2F;blog&#x2F;env, activated.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;blog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;local&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;] [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;egorov@asus 11:34:31&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:~&#x2F;_dev&#x2F;blog git:master= $

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Besides just jumping into directory I wanted to have &lt;code&gt;tab&lt;&#x2F;code&gt; autocompletion and
easy way to create new projects &lt;code&gt;home&lt;&#x2F;code&gt; directory:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# autocompletion
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;[local] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;egorov@asus 11:43:01&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:~  $ dev service-  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# tab hitted twice
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;service-account   service-feedback  service-products  service-workers

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# new project home
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;local&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;] [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;egorov@asus 11:52:08&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:~  $ dev rogue
mkdir: created directory &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&#x2F;home&#x2F;egorov&#x2F;_dev&#x2F;rogue&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;No virtual environment found, skipping activate.
[local] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;egorov@asus 11:52:25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;:~&#x2F;_dev&#x2F;rogue  $

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So, here are &lt;code&gt;bash&lt;&#x2F;code&gt; helpers which should be placed somewhere inside &lt;code&gt;~&#x2F;.bashrc&lt;&#x2F;code&gt;
or &lt;code&gt;~&#x2F;.bash_profile&lt;&#x2F;code&gt; (mine lives &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;.bash.d&#x2F;dev&quot;&gt;there&lt;&#x2F;a&gt;).
&lt;code&gt;_dev&lt;&#x2F;code&gt; function depends on &lt;code&gt;inve&lt;&#x2F;code&gt; shell script which must be available
in &lt;code&gt;PATH&lt;&#x2F;code&gt; (I have &lt;code&gt;$HOME&#x2F;bin&lt;&#x2F;code&gt; in &lt;code&gt;PATH&lt;&#x2F;code&gt; for this and &lt;code&gt;inve&lt;&#x2F;code&gt; lives &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;dotfiles&#x2F;blob&#x2F;master&#x2F;bin&#x2F;inve&quot;&gt;there&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# dev
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;DEV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}&#x2F;_dev  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# home for all projects

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;_dev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;() {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;DEV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}&#x2F;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;1
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-d $p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;mkdir $p
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$p
    inve  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# binary file to be accessible in PATH
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;    return 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;_dev_complete&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;()
{
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cur prev opts
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;local &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;DEV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;-d $p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;`which mkdir` $p
    COMPREPLY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;()
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cur&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;COMP_WORDS[COMP_CWORD]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;prev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;COMP_WORDS[COMP_CWORD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;opts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;`&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;amp;&amp;amp; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;find -L . -maxdepth 1 -type d &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;sed &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;s|[\.&#x2F;]||g&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;`

    COMPREPLY&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;( $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;compgen -W &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;opts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt; -- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;${cur}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) )
}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;dev&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;_dev
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;complete -F _dev_complete dev

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;inve&lt;&#x2F;code&gt; executable content:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;#!&#x2F;usr&#x2F;bin&#x2F;env bash

# tuned idea from: https:&#x2F;&#x2F;gist.github.com&#x2F;datagrok&#x2F;2199506
#
# inve
#
# For use with Ian Bicking&amp;#39;s virtualenv tool. Attempts to find the root of
# a virtual environment and activate it in subshell.

# First, locate the root of the current virtualenv
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cwd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PWD
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;DEV_ROOT&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cwd

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PWD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;do
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# Stop here if this the root of a virtualenv
    # will look for virtualenv in `current dir` or in `env` subdirectory
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;\
        -x bin&#x2F;python \
        -a -e lib&#x2F;python&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;site.py \
        -a -e include&#x2F;python&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;Python.h &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;then
        export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;VIRTUAL_ENV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PWD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;break
    elif &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;\
        -x env&#x2F;bin&#x2F;python \
        -a -e env&#x2F;lib&#x2F;python&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;site.py \
        -a -e env&#x2F;include&#x2F;python&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;&#x2F;Python.h &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;then
        export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;VIRTUAL_ENV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PWD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&#x2F;env&amp;quot;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;break
    fi
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; ..
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;done
if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;[ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PWD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;then
    export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cwd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&#x2F;node_modules&#x2F;.bin:$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;No virtual environment found, skipping activate.&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;cd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$cwd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;else
    &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# Activate
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;export &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;VIRTUAL_ENV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&#x2F;bin:$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cwd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&#x2F;node_modules&#x2F;.bin:$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;PATH&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;unset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; PYTHONHOME
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Virtual environment found in ${&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;VIRTUAL_ENV&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;}, activated.&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;exec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;SHELL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;inve&lt;&#x2F;code&gt; script looks for &lt;code&gt;virtualenv&lt;&#x2F;code&gt; in &lt;code&gt;env&lt;&#x2F;code&gt; subdirectory or attempts to
find it somewhere upper in the filesystem tree. It modifies &lt;code&gt;PATH&lt;&#x2F;code&gt; prepending
&lt;code&gt;$VIRTUALENV&#x2F;bin&lt;&#x2F;code&gt; and &lt;code&gt;node_modules&#x2F;.bin&lt;&#x2F;code&gt; directories and starts new shell.
I like the idea of starting a new subshell in order to activate &lt;code&gt;virtualenv&lt;&#x2F;code&gt; as
this way we can be sure there will be no problems with &lt;code&gt;PATH&lt;&#x2F;code&gt; within shell and
it&#x27;s pretty safe to exit this subshell and have parent shell clean as it should
be.&lt;&#x2F;p&gt;
&lt;p&gt;To easily navigate to some directories within activated &lt;code&gt;virtualenv&lt;&#x2F;code&gt; I have a
couple of bash aliases defined:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;cdsrc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;cd ${VIRTUAL_ENV}&#x2F;src&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;cdsitepackages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;cd ${VIRTUAL_ENV}&#x2F;lib&#x2F;python*&#x2F;site-packages&#x2F;&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;alias &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;cdproject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;cd ${DEV_ROOT:-VIRTUAL_ENV}; if [ `basename ${PWD}` = &amp;quot;env&amp;quot; ]; then cd ..; fi&amp;#39;

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This approach allows me to have virtual environments using &lt;code&gt;python2&lt;&#x2F;code&gt; or
&lt;code&gt;python3&lt;&#x2F;code&gt; under single &lt;em&gt;root&lt;&#x2F;em&gt; directory and to have single tool to jump into
project be it &lt;code&gt;python2&lt;&#x2F;code&gt;, &lt;code&gt;python3&lt;&#x2F;code&gt; or even &lt;code&gt;nodejs&lt;&#x2F;code&gt; project.&lt;&#x2F;p&gt;
&lt;p&gt;Everything works pretty good for me.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Pipeline As a Code With Jenkins</title>
                <pubDate>Tue, 27 Dec 2016 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2016/jenkinsfile/</link>
                <guid>https://ysegorov.github.io/2016/jenkinsfile/</guid>
                <description>&lt;h1 id=&quot;pipeline-as-a-code-with-jenkins&quot;&gt;Pipeline as a code with Jenkins&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jenkins.io&#x2F;&quot;&gt;Jenkins&lt;&#x2F;a&gt; has a pretty nice &lt;a href=&quot;https:&#x2F;&#x2F;jenkins.io&#x2F;solutions&#x2F;pipeline&#x2F;&quot;&gt;Pipeline&lt;&#x2F;a&gt; plugin to manage build, test and
deploy steps in a single file named &lt;code&gt;Jenkinsfile&lt;&#x2F;code&gt;. This file should be stored
alongside with the project code just like &lt;code&gt;python&lt;&#x2F;code&gt;, &lt;code&gt;javascript&lt;&#x2F;code&gt;, &lt;code&gt;html&lt;&#x2F;code&gt; or
whatever files.&lt;&#x2F;p&gt;
&lt;p&gt;The only problem with &lt;code&gt;Jenkinsfile&lt;&#x2F;code&gt; is that it must be written in &lt;a href=&quot;http:&#x2F;&#x2F;www.groovy-lang.org&#x2F;&quot;&gt;Groovy&lt;&#x2F;a&gt;.
To me this is the same problem as with &lt;code&gt;Vagrantfile&lt;&#x2F;code&gt; which must be written in
&lt;a href=&quot;https:&#x2F;&#x2F;www.ruby-lang.org&#x2F;en&#x2F;&quot;&gt;Ruby&lt;&#x2F;a&gt;.
There is something strange forcing users to study language in order to have
proper configuration file.&lt;&#x2F;p&gt;
&lt;p&gt;It took some time to prepare workable &lt;code&gt;Jenkinsfile&lt;&#x2F;code&gt; which works for
&lt;a href=&quot;https:&#x2F;&#x2F;jenkins.io&#x2F;blog&#x2F;2015&#x2F;12&#x2F;03&#x2F;pipeline-as-code-with-multibranch-workflows-in-jenkins&#x2F;&quot;&gt;Multibranch Workflows&lt;&#x2F;a&gt; so I decided to create a &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;a23e7324e264b9afd932bd8b90862305&quot;&gt;gist&lt;&#x2F;a&gt; with it.&lt;&#x2F;p&gt;
&lt;p&gt;Here it is:&lt;&#x2F;p&gt;
&lt;div &gt;
    &lt;script src=&quot;https:&amp;#x2F;&amp;#x2F;gist.github.com&amp;#x2F;ysegorov&amp;#x2F;a23e7324e264b9afd932bd8b90862305.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;It works pretty good for me providing slack notifications to production or
staging channels and having links to &lt;a href=&quot;https:&#x2F;&#x2F;bitbucket.org&quot;&gt;Bitbucket&lt;&#x2F;a&gt; diff page to see changes
commited between builds.&lt;&#x2F;p&gt;
&lt;p&gt;This &lt;code&gt;Jenkinsfile&lt;&#x2F;code&gt; is suitable for &lt;code&gt;python&lt;&#x2F;code&gt; or &lt;code&gt;nodejs&lt;&#x2F;code&gt; projects and requires
just minimal tuning - to provide proper &lt;em&gt;repository name and url&lt;&#x2F;em&gt; and &lt;em&gt;build,
test and deploy&lt;&#x2F;em&gt; commands for the project.
Deployment happens only for &lt;code&gt;develop&lt;&#x2F;code&gt; (staging server) and &lt;code&gt;master&lt;&#x2F;code&gt; (production
server) branches.&lt;&#x2F;p&gt;
&lt;p&gt;Hope somebody will find this &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;a23e7324e264b9afd932bd8b90862305&quot;&gt;gist&lt;&#x2F;a&gt; usefull.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>DO</title>
                <pubDate>Tue, 11 Oct 2016 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2016/do/</link>
                <guid>https://ysegorov.github.io/2016/do/</guid>
                <description>&lt;h1 id=&quot;do&quot;&gt;DO&lt;&#x2F;h1&gt;
&lt;p&gt;Not long ago reading some news I&#x27;ve read about &lt;a href=&quot;http:&#x2F;&#x2F;letterslive.com&#x2F;&quot;&gt;Letters Live&lt;&#x2F;a&gt;
project and looking through the letters I&#x27;ve came to a brilliant one.&lt;&#x2F;p&gt;
&lt;p&gt;Certainly, this letter is very impressive and powerfull and I want to keep it
here.&lt;&#x2F;p&gt;
&lt;p&gt;Text is taken from correspondent &lt;a href=&quot;http:&#x2F;&#x2F;letterslive.com&#x2F;&quot;&gt;Letters Live&lt;&#x2F;a&gt; page and you
definitely should &lt;a href=&quot;http:&#x2F;&#x2F;letterslive.com&#x2F;letter&#x2F;do&#x2F;&quot;&gt;go there&lt;&#x2F;a&gt; to watch the video.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;letter-from-sol-lewitt-to-eva-hesse-april-14-1965&quot;&gt;Letter from Sol LeWitt to Eva Hesse, April 14, 1965&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Eva,&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;It will be almost a month since you wrote to me and you have possibly 
forgotten your state of mind (I doubt it though). 
You seem the same as always, and being you, hate every minute of it. 
Don’t! Learn to say “Fuck You” to the world once in a while. 
You have every right to. Just stop thinking, worrying, looking over your 
shoulder, wondering, doubting, fearing, hurting, 
hoping for some easy way out, struggling, grasping, confusing, 
itching, scratching, mumbling, bumbling, grumbling, humbling, 
stumbling, numbling, rambling, gambling, tumbling, scumbling, 
scrambling, hitching, hatching, bitching, moaning, groaning, 
honing, boning, horse-shitting, hair-splitting, nit-picking, 
piss-trickling, nose sticking, ass-gouging, eyeball-poking, 
finger-pointing, alleyway-sneaking, long waiting, small stepping, 
evil-eyeing, back-scratching, searching, perching, besmirching, 
grinding, grinding, grinding away at yourself. Stop it and just&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;DO&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;From your description, and from what I know of your previous work 
and your ability; the work you are doing sounds very good 
“Drawing – clean – clear but crazy like machines, 
larger and bolder… real nonsense.” 
That sounds fine, wonderful — real nonsense. 
Do more. More nonsensical, more crazy, more machines, more breasts, 
penises, cunts, whatever — make them abound with nonsense. 
Try and tickle something inside you, your “weird humor.” 
You belong in the most secret part of you. 
Don’t worry about cool, make your own uncool. 
Make your own, your own world. 
If you fear, make it work for you — draw &amp;amp; paint your fear &amp;amp; anxiety. 
And stop worrying about big, deep things such as 
“to decide on a purpose and way of life, a consistant approach 
to even some impossible end or even an imagined end.” 
You must practice being stupid, dumb, unthinking, empty. 
Then you will be able to&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;DO&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I have much confidence in you and even though you are tormenting yourself, 
the work you do is very good. Try to do some BAD work — 
the worst you can think of and see what happens but mainly relax 
and let everything go to hell — 
you are not responsible for the world — 
you are only responsible for your work — so DO IT. 
And don’t think that your work has to conform to any preconceived 
form, idea or flavor. 
It can be anything you want it to be. 
But if life would be easier for you if you stopped working — then stop. 
Don’t punish yourself. 
However, I think that it is so deeply engrained in you that 
it would be easier to&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;DO&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;It seems I do understand your attitude somewhat, anyway, 
because I go through a similar process every so often. 
I have an “Agonizing Reappraisal” of my work and change 
everything as much as possible — and hate everything I’ve done, 
and try to do something entirely different and better. 
Maybe that kind of process is necessary to me, pushing me on and on. 
The feeling that I can do better than that shit I just did. 
Maybe you need your agony to accomplish what you do. 
And maybe it goads you on to do better. 
But it is very painful I know. 
It would be better if you had the confidence just to do the stuff 
and not even think about it. 
Can’t you leave the “world” and “ART” alone and also quit fondling your ego. 
I know that you (or anyone) can only work so much 
and the rest of the time you are left with your thoughts. 
But when you work or before your work you have to empty 
your mind and concentrate on what you are doing. 
After you do something it is done and that’s that. 
After a while you can see some are better than others 
but also you can see what direction you are going. 
I’m sure you know all that. 
You also must know that you don’t have to justify your work — 
not even to yourself. 
Well, you know I admire your work greatly and can’t understand 
why you are so bothered by it. But you can see the next ones &amp;amp; I can’t. 
You also must believe in your ability. 
I think you do. 
So try the most outrageous things you can — shock yourself. 
You have at your power the ability to do anything.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I would like to see your work and will have to be content to wait 
until Aug or Sept. 
I have seen photos of some of Tom’s new things at Lucy’s. 
They are very impressive — especially the ones with the more rigorous form; 
the simpler ones. I guess he’ll send some more later on. 
Let me know how the shows are going and that kind of stuff.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;My work has changed since you left and it is much better. 
I will be having a show May 4–29 
at the Daniels Gallery 17 E 64th St (where Emmerich was), 
I wish you could be there. 
Much love to you both.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Sol&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</description>
            </item>
        
            <item>
                <title>Alcor Micro AU6601 PCI-E Flash card reader controller</title>
                <pubDate>Fri, 30 Sep 2016 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2016/au6601/</link>
                <guid>https://ysegorov.github.io/2016/au6601/</guid>
                <description>&lt;h1 id=&quot;alcor-micro-au6601-pci-e-flash-card-reader-controller-on-archlinux&quot;&gt;Alcor Micro AU6601 PCI-E Flash card reader controller on ArchLinux&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; Please check &lt;a href=&quot;&#x2F;2018&#x2F;au6601-2&#x2F;&quot;&gt;this post&lt;&#x2F;a&gt; for installation instructions for
Linux kernel 4.16+.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;I&#x27;m running &lt;a href=&quot;https:&#x2F;&#x2F;archlinux.org&quot;&gt;ArchLinux&lt;&#x2F;a&gt; on this &lt;a href=&quot;https:&#x2F;&#x2F;www.asus.com&#x2F;Commercial-Notebooks&#x2F;ASUSPRO_ADVANCED_BU401LG&#x2F;&quot;&gt;perfect ASUSPRO BU401LG notebook&lt;&#x2F;a&gt;
by ASUS and the only problem I faced recently was sd-card reader
not working at all.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;lspci&lt;&#x2F;code&gt;&lt;&#x2F;strong&gt; shows the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ lspci
00:00.0 Host bridge: Intel Corporation Haswell-ULT DRAM Controller (rev 09&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:02.0 VGA compatible controller: Intel Corporation Haswell-ULT Integrated Graphics Controller (rev 09&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:03.0 Audio device: Intel Corporation Haswell-ULT HD Audio Controller (rev 09&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:04.0 Signal processing controller: Intel Corporation Device 0a03 (rev 09&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:16.0 Communication controller: Intel Corporation 8 Series HECI &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;#0 (rev 04)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:19.0 Ethernet controller: Intel Corporation Ethernet Connection I218-V (rev 04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1b.0 Audio device: Intel Corporation 8 Series HD Audio Controller (rev 04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1c.0 PCI bridge: Intel Corporation 8 Series PCI Express Root Port 1 (rev e4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1c.1 PCI bridge: Intel Corporation 8 Series PCI Express Root Port 2 (rev e4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1c.3 PCI bridge: Intel Corporation 8 Series PCI Express Root Port 4 (rev e4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1c.4 PCI bridge: Intel Corporation 8 Series PCI Express Root Port 5 (rev e4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1d.0 USB controller: Intel Corporation 8 Series USB EHCI &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;#1 (rev 04)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1f.0 ISA bridge: Intel Corporation 8 Series LPC Controller (rev 04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1f.2 SATA controller: Intel Corporation 8 Series SATA Controller 1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;AHCI mode&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; (rev 04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1f.3 SMBus: Intel Corporation 8 Series SMBus Controller (rev 04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;00:1f.6 Signal processing controller: Intel Corporation 8 Series Thermal (rev 04&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;02:00.0 Unassigned class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;ff00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: Alcor Micro AU6601 PCI-E Flash card reader controller
03:00.0 Network controller: Intel Corporation Wireless 7260 (rev 6b&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;04:00.0 3D controller: NVIDIA Corporation GK208M &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;GeForce GT 730M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; (rev a1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There are no events in logs after inserting sd-card into slot. So, after a bit
of searching here is the solution.&lt;&#x2F;p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;launchpad.net&#x2F;%7Eiacobs&quot;&gt;Sabin Iacob&lt;&#x2F;a&gt; there is a &lt;a href=&quot;https:&#x2F;&#x2F;launchpad.net&#x2F;%7Eiacobs&#x2F;+archive&#x2F;ubuntu&#x2F;au6601&quot;&gt;driver&lt;&#x2F;a&gt; for the card reader
and the only thing to do is to install it.&lt;&#x2F;p&gt;
&lt;p&gt;Driver is packaged for Ubuntu and these are the steps I&#x27;ve done to install
it on Arch:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;download appropriate &lt;a href=&quot;https:&#x2F;&#x2F;launchpad.net&#x2F;%7Eiacobs&#x2F;+archive&#x2F;ubuntu&#x2F;au6601&#x2F;+files&#x2F;au6601-dkms_0.3-0%7Eppa7_amd64.deb&quot;&gt;deb-package&lt;&#x2F;a&gt; (i386 or amd64)
from &lt;a href=&quot;https:&#x2F;&#x2F;launchpad.net&#x2F;%7Eiacobs&#x2F;+archive&#x2F;ubuntu&#x2F;au6601&#x2F;+packages&quot;&gt;packages&lt;&#x2F;a&gt; page&lt;&#x2F;li&gt;
&lt;li&gt;install &lt;code&gt;debtap&lt;&#x2F;code&gt; package from AUR if not already installed&lt;&#x2F;li&gt;
&lt;li&gt;initialize &lt;code&gt;debtap&lt;&#x2F;code&gt; database&lt;&#x2F;li&gt;
&lt;li&gt;convert deb package to archlinux package using &lt;code&gt;debtap&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;install generated package using &lt;code&gt;yaourt -U&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;install kernel driver&lt;&#x2F;li&gt;
&lt;li&gt;use card reader :)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ wget https:&#x2F;&#x2F;launchpad.net&#x2F;~iacobs&#x2F;+archive&#x2F;ubuntu&#x2F;au6601&#x2F;+files&#x2F;au6601-dkms_0.3-0~ppa7_amd64.deb
$ yaourt -S debtap
$ sudo debtap -u
$ debtap au6601-dkms_0.3-0-ppa7_amd64.deb
$ yaourt -U au6601-dkms-0.3-1-x86_64.pkg.tar.xz
$ sudo modprobe au6601-pci
$ udevil mount &#x2F;dev&#x2F;mmcblk0p1

&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# profit!

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;</description>
            </item>
        
            <item>
                <title>Webpack loader to use svg icons as snabbdom VNode</title>
                <pubDate>Mon, 04 Jul 2016 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2016/svg-snabbdom-loader/</link>
                <guid>https://ysegorov.github.io/2016/svg-snabbdom-loader/</guid>
                <description>&lt;h1 id=&quot;webpack-loader-to-use-svg-icons-as-snabbdom-vnode&quot;&gt;Webpack loader to use svg icons as snabbdom VNode&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; This library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;I&#x27;m exploring FRP for frontend and it looks very interesting to me, especially
for dataflow using streams.&lt;&#x2F;p&gt;
&lt;p&gt;Unidirectional data flow, introduced as &lt;strong&gt;Flux&lt;&#x2F;strong&gt; by &lt;strong&gt;Facebook&lt;&#x2F;strong&gt; engineers, is
an excellent paradigm and I was thinking about finding a way to use it without
&lt;strong&gt;React&lt;&#x2F;strong&gt; (due to the fact I don&#x27;t like it - just the same way I don&#x27;t like
&lt;strong&gt;Angular&lt;&#x2F;strong&gt; as both of them look overengineered to me).&lt;&#x2F;p&gt;
&lt;p&gt;It took some time to understand the subject of FRP and there are a lot of
useful resources available (just a couple of links here - &lt;a href=&quot;https:&#x2F;&#x2F;www.gitbook.com&#x2F;book&#x2F;drboolean&#x2F;mostly-adequate-guide&#x2F;details&quot;&gt;Mostly Adequate
Guide to Functional Programming&lt;&#x2F;a&gt;, &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;@yelouafi&#x2F;react-less-virtual-dom-with-snabbdom-functions-everywhere-53b672cb2fe3#.fnuaga25e&quot;&gt;React-less Virtual DOM with Snabbdom&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;staltz&#x2F;868e7e9bc2a7b8c1f754&quot;&gt;The introduction to Reactive Programming&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;My first attempt was to understand &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paldepind&#x2F;snabbdom&quot;&gt;snabbdom&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paldepind&#x2F;flyd&quot;&gt;flyd&lt;&#x2F;a&gt; &#x2F;
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paldepind&#x2F;union-type&quot;&gt;union-type&lt;&#x2F;a&gt; &#x2F; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ramda&#x2F;ramda&quot;&gt;ramda&lt;&#x2F;a&gt; approach and the most challenging
part was &lt;strong&gt;union types&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Studying &lt;a href=&quot;http:&#x2F;&#x2F;guide.elm-lang.org&#x2F;architecture&#x2F;index.html&quot;&gt;The ELM Architecture&lt;&#x2F;a&gt; helped a lot in this.&lt;&#x2F;p&gt;
&lt;p&gt;To dive deeper on the subject I&#x27;ve created a very simple implementation of
union types which in it&#x27;s core just tags values using specified tag name:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; type.js

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;curryN &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;ramda&#x2F;src&#x2F;curryN&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;spec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;o &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{},
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;keys &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.keys(spec)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;

    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;keys.forEach(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(key) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;spec[key];
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(spec[key].length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;) {
            o[key] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;curryN(fn.length &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;() {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;{
                    value: [].slice.apply(arguments),
                    tag: key,
                    handler: fn
                };
            });
        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;{
            o[key] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(smth) {
                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;{
                    value: smth,
                    tag: key,
                    handler: fn
                };
            };
        }
    })&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;update&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;tagged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;model&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;tag &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;tagged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.tag,
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;tagged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;tagged&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.handler;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Array&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.isArray(value) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value
                                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;[]);
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;value.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;push&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(model)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;fn.apply(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, value)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
    }
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.update &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;curryN(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, update)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Example of union type definition:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; component.js

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;type&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;R &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;ramda&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Msg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;Type({
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Click&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(evt, model) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;R&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.assoc(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;clicks&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, model.clicks &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, model); },
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Remove&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(evt, model) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;R&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.assoc(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;_removed&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, model); },
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;Tick&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(model) {
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;R&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.assoc(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;count&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, model.count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;359 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;model.count &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, model);
    }
})&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It is a bit simplier than &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paldepind&#x2F;union-type&quot;&gt;union-type&lt;&#x2F;a&gt;, doesn&#x27;t have type checking and
probably missing something in this implementation.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, it helped me to understand the data flow.&lt;&#x2F;p&gt;
&lt;p&gt;My experiments are available in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;vdom-experiment&quot;&gt;this project&lt;&#x2F;a&gt;
(work in progress).&lt;&#x2F;p&gt;
&lt;p&gt;I like to use svg icons for ui components and I used to create separate
html file with all icons embedded in it using single &lt;strong&gt;svg&lt;&#x2F;strong&gt; and multiple
&lt;strong&gt;symbol&lt;&#x2F;strong&gt; definitions and referencing them using &lt;strong&gt;xlink:href&lt;&#x2F;strong&gt; attribute.&lt;&#x2F;p&gt;
&lt;p&gt;I was planning to use icons to enrich the ui of the experiments and thought it
would be great to have &lt;strong&gt;svg&lt;&#x2F;strong&gt; icons available as &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;paldepind&#x2F;snabbdom&quot;&gt;snabbdom&lt;&#x2F;a&gt; &lt;strong&gt;VNodes&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, here is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;svg-snabbdom-loader&quot;&gt;the webpack loader&lt;&#x2F;a&gt; for this (this is my first published
&lt;strong&gt;npm&lt;&#x2F;strong&gt; module).&lt;&#x2F;p&gt;
&lt;p&gt;Usage is pretty simple just like any webpack loader:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; icons.js

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;home &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;svg&#x2F;home.svg&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;alert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;svg&#x2F;alert.svg&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;...

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;module.exports &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{
    home: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;home&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    alert: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;alert&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; alerts.js

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;icons &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;.&#x2F;icons&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;require(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;snabbdom&#x2F;h&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;view&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;model&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;) {
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;h(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;div.info&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, {}, [icons.alert, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;Some alert here&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;])&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;;
}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The loader can be chained with &lt;strong&gt;svgo-loader&lt;&#x2F;strong&gt;, please check the docs for this.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s it for now.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Django project debugging</title>
                <pubDate>Sun, 17 Jan 2016 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2016/django-debug/</link>
                <guid>https://ysegorov.github.io/2016/django-debug/</guid>
                <description>&lt;h1 id=&quot;django-project-debugging&quot;&gt;Django project debugging&lt;&#x2F;h1&gt;
&lt;p&gt;Quite often there is a need to debug some code, to see what&#x27;s going on and why
there is so much time spent generating pretty simple web page.&lt;&#x2F;p&gt;
&lt;p&gt;There are tools making this task easier, &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;django-debug-toolbar&#x2F;django-debug-toolbar&quot;&gt;django-debug-toolbar&lt;&#x2F;a&gt; looks like
&lt;strong&gt;must have&lt;&#x2F;strong&gt; debug swiss knife but I&#x27;d like to use a self-made solution.&lt;&#x2F;p&gt;
&lt;p&gt;I used to use logging as a way to get the information needed so &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;ysegorov&#x2F;7191601fd58bb37a9efd&quot;&gt;here are&lt;&#x2F;a&gt;
two classes to debug code execution time and SQL queries and timings.
They can be used as decorators or as context managers (see below).&lt;&#x2F;p&gt;
&lt;div &gt;
    &lt;script src=&quot;https:&amp;#x2F;&amp;#x2F;gist.github.com&amp;#x2F;ysegorov&amp;#x2F;7191601fd58bb37a9efd.js&quot;&gt;&lt;&#x2F;script&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;To initialize these classes you will have to pass &lt;code&gt;prefix&lt;&#x2F;code&gt; as the only
argument (needed to grep logging output).&lt;&#x2F;p&gt;
&lt;p&gt;Here are some abstract usage examples:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;django.shortcuts &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;render

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;project.articles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;get_articles, get_stats
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;from &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;project.debug &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;timer, debug_sql


@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;debug_sql&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;index&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
@&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;timer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;index&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;index&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;render(request, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;index.html&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;articles&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;request&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;timer(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;articles&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
        articles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;get_articles()
        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;with &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;debug_sql(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;articles&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:
            stats &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;get_stats(articles)
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;render(request, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;articles.html&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;articles&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: articles,
                                                     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;stats&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;: stats})

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s pretty easy to use the helpers, there is no need for a project-wide
configuration and you can focus on the code you are debugging to avoid logging
noise.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Meet Juvi</title>
                <pubDate>Mon, 29 Jun 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/juvi/</link>
                <guid>https://ysegorov.github.io/2015/juvi/</guid>
                <description>&lt;h1 id=&quot;meet-juvi&quot;&gt;Meet Juvi&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; This library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;While working on a pet project I&#x27;ve created a small client-side library
responsible (mostly) for a View part in MV* patterns and have named it
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;juvi&quot;&gt;juvi&lt;&#x2F;a&gt; (without any specific reason, just to have short name being
easy to remember).&lt;&#x2F;p&gt;
&lt;p&gt;It is young and unstable but still looked pretty good for me.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;juvi&quot;&gt;Juvi&lt;&#x2F;a&gt; depends on another library - &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;proto-js&quot;&gt;proto-js&lt;&#x2F;a&gt; which is
a modified fork of Axel Rauschmayer&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;rauschma&#x2F;proto-js&quot;&gt;code&lt;&#x2F;a&gt;.
The &lt;a href=&quot;http:&#x2F;&#x2F;www.2ality.com&#x2F;2011&#x2F;06&#x2F;prototypes-as-classes.html&quot;&gt;idea&lt;&#x2F;a&gt; behind
of &lt;strong&gt;proto-js&lt;&#x2F;strong&gt; is very interesting and it&#x27;s not clear to me why it&#x27;s not as
popular as it should be.
Currently I&#x27;m thinking about embedding &lt;strong&gt;proto-js&lt;&#x2F;strong&gt; code to &lt;strong&gt;juvi&lt;&#x2F;strong&gt; due to the
fact it&#x27;s small and it will be easier to manage &lt;strong&gt;juvi&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;So, coming back to &lt;strong&gt;juvi&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Originally plan was to create something simple and extendable and to have the
following features included out-of-the-box:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;extendability (must be a way to extend view to keep code DRY and organized)&lt;&#x2F;li&gt;
&lt;li&gt;unified way to render view&lt;&#x2F;li&gt;
&lt;li&gt;unified way to attach event handlers to DOM&lt;&#x2F;li&gt;
&lt;li&gt;unified way to declare, render and attach to DOM children views&lt;&#x2F;li&gt;
&lt;li&gt;simple and reliable way to close view on its own and children views and
free resources&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There is almost no magic inside &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;juvi&#x2F;blob&#x2F;develop&#x2F;src&#x2F;view.js&quot;&gt;view.js&lt;&#x2F;a&gt;, just check the code (code can
speak, certainly).&lt;&#x2F;p&gt;
&lt;p&gt;Probably, the most interesting part is &lt;strong&gt;handleEvent&lt;&#x2F;strong&gt; method. Here is an
&lt;a href=&quot;http:&#x2F;&#x2F;www.thecssninja.com&#x2F;javascript&#x2F;handleevent&quot;&gt;article&lt;&#x2F;a&gt; describing the
technique.&lt;&#x2F;p&gt;
&lt;p&gt;And one more note about children views.&lt;&#x2F;p&gt;
&lt;p&gt;Children views must be described in view instance as:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; code can be placed into init method

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.children &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{
    $title: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;TitleView(somePropsObject)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    $items: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;this.items.map(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(it) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;ItemView&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;.new(it); })
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;};

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and DOM nodes as:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; code should be placed into populateNodes method

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;el &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.el,
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.$;         &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;&#x2F;&#x2F; NB. not a jQuery!

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;.nodes &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;{
    $title: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;[data-title]&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, el)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;,
    $items: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;[data-items]&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, el)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;};

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Having such a definitions view will automatically render all children views and
attach them to the specified DOM nodes:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;this.children.$title&lt;&#x2F;strong&gt; view will be attached to &lt;strong&gt;this.nodes.$title&lt;&#x2F;strong&gt; node&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;this.children.$items&lt;&#x2F;strong&gt; views will be attached to &lt;strong&gt;this.nodes.$items&lt;&#x2F;strong&gt; node
(keeping order)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;There is no way to emit or listen for events per view because I&#x27;m trying to
keep events flow organized in a &lt;strong&gt;Flux&lt;&#x2F;strong&gt; way.
Here is the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;juvi&#x2F;blob&#x2F;develop&#x2F;src&#x2F;dispatcher.js&quot;&gt;dispatcher.js&lt;&#x2F;a&gt; - instance of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;juvi&#x2F;blob&#x2F;develop&#x2F;src&#x2F;pubsub.js&quot;&gt;pubsub.js&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;And I almost forgot about this dependency - &lt;strong&gt;Promise&lt;&#x2F;strong&gt;. It&#x27;s up to you to
pick the one and include it in your project.
Currently I&#x27;m using some parts of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zloirock&#x2F;core-js&quot;&gt;core.js&lt;&#x2F;a&gt;
library. Here is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jakearchibald&#x2F;es6-promise&quot;&gt;es6-promise&lt;&#x2F;a&gt;
polyfill suitable for &lt;strong&gt;pubsub&lt;&#x2F;strong&gt; too.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s it.&lt;&#x2F;p&gt;
&lt;p&gt;The mantra stays the same.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Become a creator, not a consumer.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Jukoro 0.1.2 release</title>
                <pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/jukoro-0.1.2/</link>
                <guid>https://ysegorov.github.io/2015/jukoro-0.1.2/</guid>
                <description>&lt;h1 id=&quot;jukoro-0-1-2-release&quot;&gt;Jukoro 0.1.2 release&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; This library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;It happened - first public release of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;jukoro.git&quot;&gt;Jukoro&lt;&#x2F;a&gt; (not on PyPi but still).&lt;&#x2F;p&gt;
&lt;p&gt;It is an experiment and I&#x27;ll do my best working on it.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;features-highlight-postgresql-focused&quot;&gt;Features highlight (PostgreSQL-focused)&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;unified tables structure in PostgreSQL storing data in a single per
table &lt;a href=&quot;http:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;9.4&#x2F;static&#x2F;datatype-json.html&quot;&gt;jsonb&lt;&#x2F;a&gt; field&lt;&#x2F;li&gt;
&lt;li&gt;out-of-the-box way to keep historical data in tables&lt;&#x2F;li&gt;
&lt;li&gt;out-of-the-box support for &lt;code&gt;psycopg2&lt;&#x2F;code&gt; named cursors&lt;&#x2F;li&gt;
&lt;li&gt;single per-database sequence generator for objects identifiers&lt;&#x2F;li&gt;
&lt;li&gt;out-of-the-box support for created&#x2F;updated&#x2F;deleted timestamps&lt;&#x2F;li&gt;
&lt;li&gt;indices and constraints support for data stored in &lt;a href=&quot;http:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;9.4&#x2F;static&#x2F;datatype-json.html&quot;&gt;jsonb&lt;&#x2F;a&gt; field&lt;&#x2F;li&gt;
&lt;li&gt;connection to PostgreSQL always operate with timestamps in UTC&lt;&#x2F;li&gt;
&lt;li&gt;PostgreSQL schema support&lt;&#x2F;li&gt;
&lt;li&gt;way to introspect current database state&lt;&#x2F;li&gt;
&lt;li&gt;way to prepare sql queries to synchronize database state and entities
(models) declarations (queries to create missed tables&#x2F;indices&#x2F;constraints
and to drop orphaned tables&#x2F;indices&#x2F;constraints)&lt;&#x2F;li&gt;
&lt;li&gt;separation of concerns to work with PostgreSQL (explicit ways to work with
pool&#x2F;connection&#x2F;transaction&#x2F;results,
to describe entities (models in terms of Django&#x27;s ORM),
to introspect database,
to create customized sql queries)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;packages-and-modules&quot;&gt;Packages and modules&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jukoro.pg&lt;&#x2F;code&gt; - package to work with PostgreSQL built on top of
&lt;a href=&quot;http:&#x2F;&#x2F;initd.org&#x2F;psycopg&#x2F;docs&#x2F;&quot;&gt;psycopg2&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.redis&lt;&#x2F;code&gt; - package to work with Redis having several useful helpers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.arrow&lt;&#x2F;code&gt; - package built on top of &lt;a href=&quot;http:&#x2F;&#x2F;crsmithdev.com&#x2F;arrow&#x2F;&quot;&gt;arrow&lt;&#x2F;a&gt; library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.decorators&lt;&#x2F;code&gt; - module containing some useful decorators&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.json&lt;&#x2F;code&gt; - abstraction built on top of Python&#x27;s stdlib &lt;code&gt;json&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.pickle&lt;&#x2F;code&gt; - abstraction built on top of Python&#x27;s stdlib &lt;code&gt;cPickle&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.base32&lt;&#x2F;code&gt; - abstraction built on top of
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jbittel&#x2F;base32-crockford&quot;&gt;base32_crockford&lt;&#x2F;a&gt; library&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.email&lt;&#x2F;code&gt; - email helpers&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.structures&lt;&#x2F;code&gt; - some useful structures&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;jukoro.utils&lt;&#x2F;code&gt; - utilities&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;del&gt;I am going to use it in project I&#x27;m currently working on&lt;&#x2F;del&gt; (it was never
used).&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Jukoro documentation using Sphinx</title>
                <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/jukoro-docs-using-sphinx/</link>
                <guid>https://ysegorov.github.io/2015/jukoro-docs-using-sphinx/</guid>
                <description>&lt;h1 id=&quot;jukoro-documentation-using-sphinx&quot;&gt;Jukoro documentation using Sphinx&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; &lt;code&gt;jukoro&lt;&#x2F;code&gt; library has been moved to archive, no plans to develop it further.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;Summary about creating python library documentation using &lt;a href=&quot;http:&#x2F;&#x2F;sphinx-doc.org&#x2F;&quot;&gt;Sphinx&lt;&#x2F;a&gt; and
publishing it to &lt;a href=&quot;https:&#x2F;&#x2F;pages.github.com&#x2F;&quot;&gt;GitHub Pages&lt;&#x2F;a&gt; (based on &lt;a href=&quot;http:&#x2F;&#x2F;raxcloud.blogspot.co.uk&#x2F;2013&#x2F;02&#x2F;documenting-python-code-using-sphinx.html&quot;&gt;this article&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ git clone git@github.com:ysegorov&#x2F;jukoro.git
$ cd jukoro

$ mkdir docs
$ pip install sphinx
$ sphinx-apidoc -A &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;Yuri Egorov&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt; -F -o docs jukoro

$ git add docs
$ git commit -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;sphinx-apidoc generated docs folder contents&amp;quot;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ mkdir gh-pages
$ vim docs&#x2F;Makefile  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;## change BUILDDIR to ..&#x2F;gh-pages

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ &#x2F;usr&#x2F;share&#x2F;git&#x2F;workdir&#x2F;git-new-workdir . gh-pages&#x2F;html
$ cd gh-pages&#x2F;html

$ git checkout --orphan gh-pages
$ git rm -rf .

$ cd ..&#x2F;..&#x2F;docs
$ make html
$ cd -

$ git add .
$ git commit -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;sphinx generated docs&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ git push -u origin gh-pages

$ touch .nojekyll  &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;## to skip Jekyll
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ git add .nojekyll
$ git commit -m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;quot;.nojekyll&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;$ git push
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;del&gt;And now there is jukoro&#x27;s documentation available online&lt;&#x2F;del&gt; (still requires
some attention).&lt;&#x2F;p&gt;
&lt;p&gt;For some reason I&#x27;ve started &lt;a href=&quot;&#x2F;2015&#x2F;markdown-live&#x2F;&quot;&gt;to use markdown&lt;&#x2F;a&gt; for &lt;code&gt;readme&lt;&#x2F;code&gt; and &lt;code&gt;changelog&lt;&#x2F;code&gt;
files but now it seems it would be better to use &lt;a href=&quot;http:&#x2F;&#x2F;docutils.sourceforge.net&#x2F;rst.html&quot;&gt;reStructuredText&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;This way it will be possible to include &lt;code&gt;readme&lt;&#x2F;code&gt; and &lt;code&gt;changelog&lt;&#x2F;code&gt; to
documentation (which is not finished yet).&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Markdown preview</title>
                <pubDate>Tue, 31 Mar 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/markdown-live/</link>
                <guid>https://ysegorov.github.io/2015/markdown-live/</guid>
                <description>&lt;h1 id=&quot;markdown-preview&quot;&gt;Markdown preview&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update.&lt;&#x2F;strong&gt; For &lt;a href=&quot;http:&#x2F;&#x2F;docutils.sourceforge.net&#x2F;rst.html&quot;&gt;reStructuredText&lt;&#x2F;a&gt; there is an excellent &lt;a href=&quot;https:&#x2F;&#x2F;mg.pov.lt&#x2F;restview&#x2F;&quot;&gt;restview&lt;&#x2F;a&gt;
library which works out-of-the-box.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;It took half-a-workday time to find suitable solution to be able to somehow
preview rendered markdown files.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;&quot;&gt;GitHub&lt;&#x2F;a&gt; uses &lt;a href=&quot;https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;github-flavored-markdown&#x2F;&quot;&gt;GitHub Flavored Markdown&lt;&#x2F;a&gt; so before committing
anything to the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;jukoro&#x2F;&quot;&gt;Jukoro&lt;&#x2F;a&gt; reporsitory it would be great to take a quick
look at rendered markdown files.&lt;&#x2F;p&gt;
&lt;p&gt;My editor of choice is &lt;a href=&quot;http:&#x2F;&#x2F;www.vim.org&#x2F;&quot;&gt;vim&lt;&#x2F;a&gt; and I have rather strong intension to keep it
as is.&lt;&#x2F;p&gt;
&lt;p&gt;I prefer simple solutions meaning right after save I can see changes rendered
in browser (I don&#x27;t need really live preview to see changes while typing).
Browser-based editors don&#x27;t suit me due to the fact you have to edit a file in
browser.&lt;&#x2F;p&gt;
&lt;p&gt;I looked at &lt;a href=&quot;https:&#x2F;&#x2F;atom.io&#x2F;&quot;&gt;Atom&lt;&#x2F;a&gt; and almost decided to use it but a small annoyance
forced me to look better for other ways (the annoyance is about caret
disappearing in editor after switching from and back to it).
For me there is one more problem with it.
I&#x27;d like to turn off bold font in editor (the way I get used to working
in terminal) but I have no luck searching for this feature in preferences.&lt;&#x2F;p&gt;
&lt;p&gt;There are several &lt;a href=&quot;https:&#x2F;&#x2F;nodejs.org&#x2F;&quot;&gt;nodejs&lt;&#x2F;a&gt;-based solutions but with most of them I had a
problem with live update (for some reason it was not working as expected by me).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;mobily&#x2F;markdown-live&quot;&gt;markdown-live&lt;&#x2F;a&gt; is the solution that I chose.
It works great and have a side panel to quickly switch between markdown-files.
Just great.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Micro datetime parsing benchmark</title>
                <pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/micro-datetime-parsing-benchmark/</link>
                <guid>https://ysegorov.github.io/2015/micro-datetime-parsing-benchmark/</guid>
                <description>&lt;h1 id=&quot;micro-datetime-parsing-benchmark&quot;&gt;Micro datetime parsing benchmark&lt;&#x2F;h1&gt;
&lt;p&gt;Just a note for myself about datetime parsing in python.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s assume we know ahead that we have a datetime string in &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;ISO_8601&quot;&gt;ISO 8601&lt;&#x2F;a&gt;
format and timezone is &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Coordinated_Universal_Time&quot;&gt;UTC&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Here is a benchmark.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;arrow, re, datetime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;as &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;dt

In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: iso &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.utcnow().isoformat()

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: iso
Out[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;2015-03-26T07:59:44.210642+00:00&amp;#39;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: r &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;re.compile(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;\-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;T:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.get(iso)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;Out[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;Arrow [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2015&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;03&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;26T07:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;59&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;44.210642&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.get(dt.datetime.strptime(iso.rpartition(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;+&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;], &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%S&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;UTC&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;Out[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;Arrow [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2015&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;03&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;26T07:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;59&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;44.210642&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.get(dt.datetime(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, r.split(iso.rpartition(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;+&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;]))), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;UTC&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;Out[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;7&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;Arrow [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;2015&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;03&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;26T07:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;59&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;44.210642&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;00&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;&amp;gt;

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;timeit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.get(iso)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;10000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;loops, best of &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;54.7 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;µs per loop

In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;timeit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.get(dt.datetime.strptime(iso.rpartition(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;+&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;], &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%Y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%H&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%M&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%S&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;%f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;UTC&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;100000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;loops, best of &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;17.5 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;µs per loop

In [&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;]: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;timeit &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;arrow.get(dt.datetime(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fabd2f;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;, r.split(iso.rpartition(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;+&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;]))), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b8bb26;&quot;&gt;&amp;#39;UTC&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;100000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;loops, best of &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d3869b;&quot;&gt;8.83 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;µs per loop
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Unfortunatelly, the third way of parsing is wrong because it doesn&#x27;t take into
account microseconds zero-padded to the left.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;crsmithdev&#x2F;arrow&quot;&gt;Arrow&lt;&#x2F;a&gt; library is just great and is certainly worth trying out.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Excellent article</title>
                <pubDate>Wed, 25 Mar 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/excellent-article/</link>
                <guid>https://ysegorov.github.io/2015/excellent-article/</guid>
                <description>&lt;h1 id=&quot;excellent-article&quot;&gt;Excellent article&lt;&#x2F;h1&gt;
&lt;p&gt;Really excellent &lt;a href=&quot;http:&#x2F;&#x2F;kukuruku.co&#x2F;hub&#x2F;programming&#x2F;do-not-learn-frameworks-learn-the-architecture&quot;&gt;article&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;habrahabr.ru&#x2F;post&#x2F;253297&#x2F;&quot;&gt;original&lt;&#x2F;a&gt; in Russian).&lt;&#x2F;p&gt;
&lt;p&gt;Yesterday I&#x27;ve summed up &lt;a href=&quot;&#x2F;2015&#x2F;chtd&#x2F;&quot;&gt;my experience&lt;&#x2F;a&gt; working for &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt;
and I have one more thought to share.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s just one more reason to minimize frameworks usage.&lt;&#x2F;p&gt;
&lt;p&gt;From my experience frameworks are a trap. You can safely use them for some time
but in case your project is evolving and you want to follow the evolution of
used frameworks you will find yourself spending time refactoring your code to
work with that exact framework.&lt;&#x2F;p&gt;
&lt;p&gt;Instead of developing your project&#x27;s business logic you have to support
some framework code evolution.&lt;br &#x2F;&gt;
It sounds strange for me.&lt;br &#x2F;&gt;
I&#x27;ve faced this problem working for &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt; but I had no luck
explaining the problem to colleagues.&lt;&#x2F;p&gt;
&lt;p&gt;There is a way to use framework - just freeze it on a specific version but
that&#x27;s another trap.&lt;&#x2F;p&gt;
&lt;p&gt;You will have to support framework at that specific
version on your own fixing bugs or adding missed functionality or backporting
or whatever. Do you really need it?&lt;&#x2F;p&gt;
&lt;p&gt;I think it&#x27;s better to spend time focusing on your business logic.&lt;&#x2F;p&gt;
&lt;p&gt;To be a good developer you have to find your own way. Build something on
your own. Make mistakes. Fix them. Explore and share your knowledge.&lt;&#x2F;p&gt;
&lt;p&gt;Become a creator, not a consumer.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Chtd</title>
                <pubDate>Tue, 24 Mar 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/chtd/</link>
                <guid>https://ysegorov.github.io/2015/chtd/</guid>
                <description>&lt;h1 id=&quot;chtd&quot;&gt;Chtd&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;preface&quot;&gt;Preface&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;ve started to work for &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt; in October 2011 and worked till
February 2015.
It was a good time and I want to say thank you to everyone who worked with.&lt;&#x2F;p&gt;
&lt;p&gt;At the moment of writing this post the company is in a difficult sutiation
and it had to shrink (four of the six developers were forced
to leave the company).&lt;&#x2F;p&gt;
&lt;p&gt;This is going to be a long post and probably I&#x27;ll keep it as is.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;context&quot;&gt;Context&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;m going to sum up my experience working as a developer for &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt;
talking about the some interesting points.&lt;&#x2F;p&gt;
&lt;p&gt;The company has developed its own implementation of graph-oriented database
(think of &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Entity%E2%80%93attribute%E2%80%93value_model&quot;&gt;EAV&lt;&#x2F;a&gt;) built on top of &lt;strong&gt;PostgreSQL&lt;&#x2F;strong&gt; using &lt;strong&gt;Django&lt;&#x2F;strong&gt;
called &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt;
(authors of the core are &lt;em&gt;Vjacheslav Fyodorov&lt;&#x2F;em&gt; and &lt;em&gt;Konstantin Lopuhin&lt;&#x2F;em&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;The database provides a way of storing historical data meaning we have a full
history of changes in it (no physical delete operations). The library for this
is open sourced and is called &lt;a href=&quot;https:&#x2F;&#x2F;bitbucket.org&#x2F;chtd&#x2F;documents&quot;&gt;documents&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A typical project on the basis of &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt; consists of several libraries
providing needed functionality.&lt;&#x2F;p&gt;
&lt;p&gt;Working with &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt; means we can build reports almost unlimited
in size and have automatic calculations according to calc rules
specified by analysts.&lt;&#x2F;p&gt;
&lt;p&gt;We have a specialized report builder and some other useful tools.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;&#x2F;h2&gt;
&lt;p&gt;This is rather important point to begin with it. Going back to 2011
the company used
selfhosted &lt;strong&gt;subversion&lt;&#x2F;strong&gt; as a version control system and actually there was no
established workflow for development. The team was small and for some time the
situation was acceptable. But the more we wrote the code more difficult it
becomes to control the situation.&lt;&#x2F;p&gt;
&lt;p&gt;I don&#x27;t remember exact dates but we changed it.&lt;&#x2F;p&gt;
&lt;p&gt;As a first step it was switch to &lt;strong&gt;mercurial&lt;&#x2F;strong&gt; repositories hosted by
&lt;a href=&quot;https:&#x2F;&#x2F;bitbucket.org&quot;&gt;BitBucket&lt;&#x2F;a&gt;. We&#x27;ve splitted monolitic &lt;strong&gt;svn&lt;&#x2F;strong&gt;-repository to several
&lt;strong&gt;hg&lt;&#x2F;strong&gt; repos.&lt;&#x2F;p&gt;
&lt;p&gt;As a second step we&#x27;ve adopted &lt;a href=&quot;http:&#x2F;&#x2F;nvie.com&#x2F;posts&#x2F;a-successful-git-branching-model&#x2F;&quot;&gt;gitflow&lt;&#x2F;a&gt; as a main workflow to work with
features, fixes and releases (it was my investigation about possible
workflows which led us to this excellent solution). Thank you, &lt;em&gt;Vincent
Driessen&lt;&#x2F;em&gt;, for sharing your experience!&lt;&#x2F;p&gt;
&lt;p&gt;As a third step we&#x27;ve started to use pull requests to review the code to be
merged to &lt;em&gt;default&lt;&#x2F;em&gt; branches.&lt;&#x2F;p&gt;
&lt;p&gt;From the very beginning we were using &lt;strong&gt;Redmine&lt;&#x2F;strong&gt; to track issues and manage
projects and it&#x27;s just great.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;automation&quot;&gt;Automation&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;bitbucket-and-redmine&quot;&gt;BitBucket and Redmine&lt;&#x2F;h3&gt;
&lt;p&gt;Using &lt;strong&gt;svn&lt;&#x2F;strong&gt; we had a post-commit hook configured to send email with diff to
developers mailing list.&lt;&#x2F;p&gt;
&lt;p&gt;After switching to &lt;a href=&quot;https:&#x2F;&#x2F;bitbucket.org&quot;&gt;BitBucket&lt;&#x2F;a&gt; we wanted to keep these emails
with diff so our internal project called &lt;strong&gt;bbhook&lt;&#x2F;strong&gt; was born and released by me.&lt;&#x2F;p&gt;
&lt;p&gt;It is backed by &lt;strong&gt;PostgreSQL&lt;&#x2F;strong&gt; and &lt;strong&gt;Django&lt;&#x2F;strong&gt; and has two modes of operation -
as a service to be notified by &lt;a href=&quot;https:&#x2F;&#x2F;bitbucket.org&quot;&gt;BitBucket&lt;&#x2F;a&gt; about push and
as a django-command configured to run by crontab every 5 minutes.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Bbhook&lt;&#x2F;strong&gt; project can handle multiple &lt;strong&gt;hg&lt;&#x2F;strong&gt; repositories and under the hood
it does the following:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;update repositories mirrors (repositories must be cloned on the same
server running &lt;strong&gt;bbhook&lt;&#x2F;strong&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;process each new commit arrived from &lt;a href=&quot;https:&#x2F;&#x2F;bitbucket.org&quot;&gt;BitBucket&lt;&#x2F;a&gt;:
&lt;ul&gt;
&lt;li&gt;get diff&lt;&#x2F;li&gt;
&lt;li&gt;prepare email text using &lt;strong&gt;pygments&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;send email&lt;&#x2F;li&gt;
&lt;li&gt;parse commit message to get &lt;strong&gt;Redmine&lt;&#x2F;strong&gt; issue number&lt;&#x2F;li&gt;
&lt;li&gt;post a message to corresponding &lt;strong&gt;Redmine&lt;&#x2F;strong&gt; issue&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;Bbhook&lt;&#x2F;strong&gt; works pretty well and we had just a few issues with it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;fabric&quot;&gt;Fabric&lt;&#x2F;h3&gt;
&lt;p&gt;Going back to 2011 and 2012 we were using makefile to prepare configuration files
to deploy a web service (project built on &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;It was a working solution but I wasn&#x27;t satisfied with it. We still had
a lot of things to do by hand.&lt;&#x2F;p&gt;
&lt;p&gt;It should be noted that we had one development server running a lot of web
services to be tested and reviewed by our testers and analysts. The time was
critical here - we were spending too much time deploying a service.&lt;&#x2F;p&gt;
&lt;p&gt;So, I&#x27;ve remembered of &lt;a href=&quot;http:&#x2F;&#x2F;www.fabfile.org&#x2F;&quot;&gt;Fabric&lt;&#x2F;a&gt; and some time later we were using
our specific &lt;strong&gt;fabfile&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Its initial version had several most important commands for us:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;deploy a new service from a specified &lt;strong&gt;hg&lt;&#x2F;strong&gt; project branch&lt;&#x2F;li&gt;
&lt;li&gt;update previously deployed service&lt;&#x2F;li&gt;
&lt;li&gt;create &lt;strong&gt;postgresql&lt;&#x2F;strong&gt; database according to settings&lt;&#x2F;li&gt;
&lt;li&gt;load &lt;strong&gt;postgresql&lt;&#x2F;strong&gt; dump to database or&lt;&#x2F;li&gt;
&lt;li&gt;load database with initial data&lt;&#x2F;li&gt;
&lt;li&gt;and some others&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Later the &lt;strong&gt;fabfile&lt;&#x2F;strong&gt; was extended to build a project distribution, to attach
newly deployed service to &lt;strong&gt;apache&lt;&#x2F;strong&gt; instance, to clean up service etc.&lt;&#x2F;p&gt;
&lt;p&gt;The core command was &lt;strong&gt;deploy&lt;&#x2F;strong&gt; and combined with others we could deploy a
service by issuing just one command in &lt;strong&gt;bash&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The key win here was a way we specify service settings (server name, db
parameters etc.) - in a command line instead of manually editing configuration
file.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;static-files&quot;&gt;Static files&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;em&gt;Update&lt;&#x2F;em&gt;. Sometimes I&#x27;m still fighting with &lt;strong&gt;gulp&lt;&#x2F;strong&gt; spending too much time
configuring it. The &lt;a href=&quot;http:&#x2F;&#x2F;blog.keithcirkel.co.uk&#x2F;how-to-use-npm-as-a-build-tool&#x2F;&quot;&gt;article by Keith Cirkel&lt;&#x2F;a&gt;
helped a lot to start using &lt;code&gt;npm&lt;&#x2F;code&gt; as a build tool.&lt;&#x2F;p&gt;
&lt;p&gt;This is a very long story on its own that is why I&#x27;ll not go into details.&lt;&#x2F;p&gt;
&lt;p&gt;We had a &lt;a href=&quot;https:&#x2F;&#x2F;djangoproject.com&#x2F;&quot;&gt;Django&lt;&#x2F;a&gt;-based project with a lot of libraries.
Some of them had static files - &lt;strong&gt;javascript&lt;&#x2F;strong&gt;, &lt;strong&gt;css&lt;&#x2F;strong&gt;, &lt;strong&gt;handlebars&lt;&#x2F;strong&gt;
templates for client-side, &lt;strong&gt;less&lt;&#x2F;strong&gt; and &lt;strong&gt;sass&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;We passed this way:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;webassets&lt;&#x2F;strong&gt; library (&lt;strong&gt;python&lt;&#x2F;strong&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;grunt&lt;&#x2F;strong&gt; (&lt;strong&gt;nodejs&lt;&#x2F;strong&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;gulp&lt;&#x2F;strong&gt; (&lt;strong&gt;nodejs&lt;&#x2F;strong&gt;)&lt;&#x2F;li&gt;
&lt;li&gt;selfmade &lt;strong&gt;bundler&lt;&#x2F;strong&gt; (&lt;strong&gt;nodejs&lt;&#x2F;strong&gt;)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I was managing switch to &lt;strong&gt;grunt&lt;&#x2F;strong&gt; and to &lt;strong&gt;gulp&lt;&#x2F;strong&gt; and I am the only author of
&lt;strong&gt;bundler&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Reasons for this journey were speed and stability. We need speed to compile
static files and we need stability deploying new services on different servers
running different Linux flavours.&lt;&#x2F;p&gt;
&lt;p&gt;Using &lt;strong&gt;grunt&lt;&#x2F;strong&gt; we were suffering from speed and using &lt;strong&gt;gulp&lt;&#x2F;strong&gt; we were
suffering from stability (stability of &lt;strong&gt;gulp plugins&lt;&#x2F;strong&gt; to be installed on
different servers).&lt;&#x2F;p&gt;
&lt;p&gt;I am sure these are not the issues any more for &lt;strong&gt;grunt&lt;&#x2F;strong&gt; and &lt;strong&gt;gulp&lt;&#x2F;strong&gt; (and I
am successfully using &lt;strong&gt;gulp&lt;&#x2F;strong&gt; in my pet projects) but at some moment I&#x27;ve
decided to drop this dependency.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Bundler&lt;&#x2F;strong&gt; is a one &lt;strong&gt;javascript&lt;&#x2F;strong&gt; file (&lt;strong&gt;nodejs&lt;&#x2F;strong&gt; module) which is rather
complex inside but works pretty well.&lt;&#x2F;p&gt;
&lt;p&gt;There is a chance I&#x27;ll write a post focusing on &lt;strong&gt;bundler&lt;&#x2F;strong&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s all for automation section.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;python-javascript&quot;&gt;Python, Javascript&lt;&#x2F;h2&gt;
&lt;p&gt;This can be a huge section but I&#x27;ll focus only on some examples (without any
specific order).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;low-level-netdb-administration&quot;&gt;Low-level NetDB administration&lt;&#x2F;h3&gt;
&lt;p&gt;It was my first library written for &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt; and we called it
&lt;em&gt;Object editor&lt;&#x2F;em&gt; (&lt;em&gt;oditor&lt;&#x2F;em&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Due to &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt; specific internals there was a need for an
administration tool (&lt;a href=&quot;https:&#x2F;&#x2F;djangoproject.com&#x2F;&quot;&gt;Django&lt;&#x2F;a&gt; embedded admin site didn&#x27;t suit us).&lt;&#x2F;p&gt;
&lt;p&gt;I think it was great for me to create &lt;em&gt;oditor&lt;&#x2F;em&gt; because I had a way to better
understand &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt; internals.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;em&gt;Oditor&lt;&#x2F;em&gt; had two implementations.&lt;&#x2F;p&gt;
&lt;p&gt;The first one was made using simple a-la &lt;strong&gt;REST&lt;&#x2F;strong&gt; backend and
&lt;a href=&quot;http:&#x2F;&#x2F;dojotoolkit.org&#x2F;&quot;&gt;Dojo&lt;&#x2F;a&gt;-based frontend.&lt;&#x2F;p&gt;
&lt;p&gt;To tell you the truth - I don&#x27;t like &lt;a href=&quot;http:&#x2F;&#x2F;dojotoolkit.org&#x2F;&quot;&gt;Dojo&lt;&#x2F;a&gt;.
It is great and awesome but it&#x27;s not for me.
I am sure there is something with me, not with &lt;a href=&quot;http:&#x2F;&#x2F;dojotoolkit.org&#x2F;&quot;&gt;Dojo&lt;&#x2F;a&gt;. I&#x27;ll keep it as is.&lt;&#x2F;p&gt;
&lt;p&gt;The second implementation was made using &lt;strong&gt;Backbone&lt;&#x2F;strong&gt; and &lt;strong&gt;Bootstrap&lt;&#x2F;strong&gt;
(details on them follow) and it was a big step forward to better &lt;strong&gt;python&lt;&#x2F;strong&gt; and
&lt;strong&gt;javascript&lt;&#x2F;strong&gt; code and to usability.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;backbone-and-bootstrap&quot;&gt;Backbone and Bootstrap&lt;&#x2F;h3&gt;
&lt;p&gt;Going back to 2011&#x2F;2012 my javascript code was ugly.
I was the beginner and I was trying to have code organized but I&#x27;m not sure
I&#x27;ve managed it.&lt;&#x2F;p&gt;
&lt;p&gt;As it usually happens there is a moment at which you understand - you have to
do something.
And by chance there was a project in which I was the only person responsible
for frontend.&lt;&#x2F;p&gt;
&lt;p&gt;I took the chance and created the basis for some of our client-side libraries.&lt;&#x2F;p&gt;
&lt;p&gt;It was based on modification of &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;af&#x2F;djangbone&quot;&gt;djangbone&lt;&#x2F;a&gt; for backend
(an excellent library I must say).&lt;&#x2F;p&gt;
&lt;p&gt;And it is based on &lt;a href=&quot;http:&#x2F;&#x2F;backbonejs.org&#x2F;&quot;&gt;backbone&lt;&#x2F;a&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;marionettejs.com&#x2F;&quot;&gt;marionette&lt;&#x2F;a&gt; and
&lt;a href=&quot;http:&#x2F;&#x2F;getbootstrap.com&#x2F;2.3.2&#x2F;&quot;&gt;bootstrap&lt;&#x2F;a&gt; - for frontend.&lt;&#x2F;p&gt;
&lt;p&gt;I think it was one of the most important steps during the history of
&lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt; because &lt;a href=&quot;https:&#x2F;&#x2F;qubequ.com&quot;&gt;QuBeQu&lt;&#x2F;a&gt; (&lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&#x2F;netdb&quot;&gt;NetDB&lt;&#x2F;a&gt; SaaS solution)
was built on top of this library.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;user-permissions&quot;&gt;User permissions&lt;&#x2F;h3&gt;
&lt;p&gt;This is a story about refactoring &lt;strong&gt;python&lt;&#x2F;strong&gt; code.&lt;&#x2F;p&gt;
&lt;p&gt;We had rather complicated permissions system developed back to 2012. Really
complicated. The author of the system has left the company a year later.&lt;&#x2F;p&gt;
&lt;p&gt;Supporting one of our projects we&#x27;ve got a complain from the end user about
speed. It took too much time loading one specific page from our web service
(more than a minute - awful).&lt;&#x2F;p&gt;
&lt;p&gt;Profiling showed that it&#x27;s user permissions system to blame.&lt;&#x2F;p&gt;
&lt;p&gt;Quick tests showed a possible way of fixing it and at first I was thinking it
will took from seven to ten days.
Actually it took almost two months if I&#x27;m not mistaken.&lt;&#x2F;p&gt;
&lt;p&gt;I should say there was my bad refactoring tests and I lost a week or so but
still - there is a huge codebase and my estimates were naive.&lt;&#x2F;p&gt;
&lt;p&gt;Refactoring the code was a great lesson.&lt;&#x2F;p&gt;
&lt;p&gt;For the first time I&#x27;ve tried to use Python descriptors and I really liked it.&lt;&#x2F;p&gt;
&lt;p&gt;Python descriptors are a great way of structuring your codebase.&lt;&#x2F;p&gt;
&lt;p&gt;The result of the refactoring was awesome - page load time decreased to 1
second (from more than a minute!).&lt;&#x2F;p&gt;
&lt;h3 id=&quot;digital-signature&quot;&gt;Digital signature&lt;&#x2F;h3&gt;
&lt;p&gt;We had a couple of projects with the need for digital signature support.&lt;&#x2F;p&gt;
&lt;p&gt;In general this is about integration with &lt;a href=&quot;http:&#x2F;&#x2F;cryptopro.ru&#x2F;&quot;&gt;CryptoPro&lt;&#x2F;a&gt; software
(Russia-only solution).&lt;&#x2F;p&gt;
&lt;p&gt;One of the tasks here was to provide full functionality for users having
certificates signed by accredited certified centers.&lt;&#x2F;p&gt;
&lt;p&gt;There is a specialized portal distributing the XML list of accredited centers
but that is not enough. We need to load CRLs too and there is no single point
to get all CRLs from.&lt;&#x2F;p&gt;
&lt;p&gt;It took some time to develop an optimal solution (this is about fetching data
from Internet).&lt;&#x2F;p&gt;
&lt;p&gt;It was one more battle for speed to load certificates and CRLs within
a reasonable time.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;olap&quot;&gt;OLAP&lt;&#x2F;h3&gt;
&lt;p&gt;Mostly client-side library acting as an OLAP builder built on top of our
&lt;a href=&quot;http:&#x2F;&#x2F;backbonejs.org&#x2F;&quot;&gt;backbone&lt;&#x2F;a&gt;-based library.&lt;&#x2F;p&gt;
&lt;p&gt;Most interesting part here was drag&#x27;n&#x27;drop to provide better user experience.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve created the first version of this library and later it was handed over to
another developer.
It is one of the most valuable libraries at &lt;a href=&quot;https:&#x2F;&#x2F;qubequ.com&quot;&gt;QuBeQu&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jquery-dashboard&quot;&gt;jQuery dashboard&lt;&#x2F;h3&gt;
&lt;p&gt;One more client-side library created by me.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;del&gt;I&#x27;m expecting it to be published by &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt; under the MIT license
(we had such an agreement)&lt;&#x2F;del&gt;. It is &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;chtd&#x2F;jquery.dashboard&quot;&gt;published&lt;&#x2F;a&gt;
by &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt; under the MIT license.&lt;&#x2F;p&gt;
&lt;p&gt;The library is used to create custom layouts of reports and charts - for
dashboards.&lt;&#x2F;p&gt;
&lt;p&gt;Drag&#x27;n&#x27;drop here too.&lt;&#x2F;p&gt;
&lt;p&gt;There are more libraries and tasks I&#x27;ve done working for &lt;a href=&quot;http:&#x2F;&#x2F;chtd.ru&quot;&gt;Chtd&lt;&#x2F;a&gt;, a lot more.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jython&quot;&gt;Jython&lt;&#x2F;h2&gt;
&lt;p&gt;This is one more subject I&#x27;d like to talk about.&lt;&#x2F;p&gt;
&lt;p&gt;We had an import&#x2F;export functionality providing support for &lt;strong&gt;Excel&lt;&#x2F;strong&gt; files
(among other formats).&lt;&#x2F;p&gt;
&lt;p&gt;There were several &lt;strong&gt;python&lt;&#x2F;strong&gt;-only solutions but we were not satisfied by them.
We needed a way to work with any &lt;strong&gt;xls&#x2F;xlsx&lt;&#x2F;strong&gt; file keeping its original
formatting untouched.&lt;&#x2F;p&gt;
&lt;p&gt;One day I&#x27;ve stumbled upon &lt;a href=&quot;http:&#x2F;&#x2F;poi.apache.org&#x2F;&quot;&gt;POI&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;At first I was not sure we would be able to use it. I thought we need &lt;strong&gt;Java&lt;&#x2F;strong&gt;
developer.&lt;&#x2F;p&gt;
&lt;p&gt;But some time later I&#x27;ve remembered about the &lt;a href=&quot;http:&#x2F;&#x2F;www.jython.org&#x2F;&quot;&gt;Jython&lt;&#x2F;a&gt; project.
It was an experiment and it was a success.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve splitted the functionality into several parts.&lt;&#x2F;p&gt;
&lt;p&gt;The first one was &lt;a href=&quot;http:&#x2F;&#x2F;www.jython.org&#x2F;&quot;&gt;Jython&lt;&#x2F;a&gt;-powered http service to work with &lt;strong&gt;Excel&lt;&#x2F;strong&gt;
documents.&lt;&#x2F;p&gt;
&lt;p&gt;The second one was &lt;strong&gt;python&lt;&#x2F;strong&gt; library to communicate with this service and send
and receive data.&lt;&#x2F;p&gt;
&lt;p&gt;And a bit later there was the third one - client-side import&#x2F;export
configuration library providing a way to set parameters (we can read&#x2F;write data
from&#x2F;to different sheets and cells within &lt;strong&gt;Excel&lt;&#x2F;strong&gt; documents).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;http:&#x2F;&#x2F;poi.apache.org&#x2F;&quot;&gt;POI&lt;&#x2F;a&gt;-based solution worked great and we had pretty good performance for
import&#x2F;export operations.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;&#x2F;h2&gt;
&lt;p&gt;It was a good time. There were moments I was not satisfied with myself or
someone from colleagues but we are all human beings.&lt;&#x2F;p&gt;
&lt;p&gt;We can and we must make mistakes - to be able to create something better.&lt;&#x2F;p&gt;
&lt;p&gt;I have no opportunity but would love to work using &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Lean_software_development&quot;&gt;Lean Software
Development&lt;&#x2F;a&gt; principles.&lt;&#x2F;p&gt;
&lt;p&gt;While developing sometimes it&#x27;s better to think about optimisation ahead. You
must find a balance inside your mind between the desire to experiment and the
need to provide a solution in time.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s better to stay focused.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s important to form the team. Very important for the project.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Grief</title>
                <pubDate>Sun, 01 Mar 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/grief/</link>
                <guid>https://ysegorov.github.io/2015/grief/</guid>
                <description>&lt;h1 id=&quot;grief&quot;&gt;Grief&lt;&#x2F;h1&gt;
&lt;p&gt;Boris Nemtsov.&lt;&#x2F;p&gt;
&lt;p&gt;Terrible pain. Emptiness inside. Impossible to comprehend.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Module level abstraction in python</title>
                <pubDate>Sat, 31 Jan 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/module-level-abstraction-in-python/</link>
                <guid>https://ysegorov.github.io/2015/module-level-abstraction-in-python/</guid>
                <description>&lt;h1 id=&quot;module-level-abstraction-in-python&quot;&gt;Module-level abstraction in Python&lt;&#x2F;h1&gt;
&lt;p&gt;Sample code first.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282828;&quot;&gt;
&lt;span style=&quot;font-style:italic;color:#928374;&quot;&gt;# -*- coding: utf-8 -*-
#
# file: jukoro&#x2F;pickle.py

&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cPickle


load &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cPickle.load
loads &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;cPickle.loads


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;dump&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cPickle.dump(obj, f, protocol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cPickle.HIGHEST_PROTOCOL)


&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8ec07c;&quot;&gt;dumps&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;obj&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1aa;&quot;&gt;):
    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fa5c4b;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cPickle.dumps(obj, protocol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fe8019;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#fdf4c1;&quot;&gt;cPickle.HIGHEST_PROTOCOL)

&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;No magic inside - in our own project we&#x27;ve created &lt;strong&gt;pickle.py&lt;&#x2F;strong&gt; module,
the one to be used in place of &lt;strong&gt;cPickle&lt;&#x2F;strong&gt; from standart library.&lt;&#x2F;p&gt;
&lt;p&gt;As a result we&#x27;ve got an &lt;a href=&quot;http:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Abstraction_principle_(computer_programming)&quot;&gt;abstraction&lt;&#x2F;a&gt;, which helps us to keep code DRY and
improves code manageability.&lt;&#x2F;p&gt;
&lt;p&gt;I like this approach.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Initial commit</title>
                <pubDate>Fri, 30 Jan 2015 00:00:00 +0000</pubDate>
                <link>https://ysegorov.github.io/2015/initial-commit/</link>
                <guid>https://ysegorov.github.io/2015/initial-commit/</guid>
                <description>&lt;h1 id=&quot;initial-commit&quot;&gt;Initial commit&lt;&#x2F;h1&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update 2&lt;&#x2F;strong&gt;. &lt;code&gt;wt&lt;&#x2F;code&gt; library has been moved to archive, no plans to develop it
further. I&#x27;ve switched to &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&quot;&gt;zola&lt;&#x2F;a&gt; to manage the blog.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;note&quot;&gt;
&lt;p&gt;&lt;strong&gt;Update 1&lt;&#x2F;strong&gt;. &lt;del&gt;This blog is powered by self-made library &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;ysegorov&#x2F;wt&#x2F;&quot;&gt;wt&lt;&#x2F;a&gt;&lt;&#x2F;del&gt;.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;p&gt;This is just a very first record in the blog which will be powered by
&lt;del&gt;&lt;a href=&quot;http:&#x2F;&#x2F;blog.getpelican.com&#x2F;&quot;&gt;Pelican&lt;&#x2F;a&gt;&lt;&#x2F;del&gt;.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
